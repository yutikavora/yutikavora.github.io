{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/yutika/Documents/YutikaPortfolio/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _regeneratorRuntime = require(\"/Users/yutika/Documents/YutikaPortfolio/node_modules/@babel/runtime/regenerator/index.js\");\nvar _asyncToGenerator = require(\"/Users/yutika/Documents/YutikaPortfolio/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _classCallCheck = require(\"/Users/yutika/Documents/YutikaPortfolio/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/yutika/Documents/YutikaPortfolio/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"/Users/yutika/Documents/YutikaPortfolio/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/Users/yutika/Documents/YutikaPortfolio/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Bubbler = void 0;\nvar NumberUtils_1 = require(\"../../../Utils/NumberUtils\");\nvar ColorUtils_1 = require(\"../../../Utils/ColorUtils\");\nvar Utils_1 = require(\"../../../Utils/Utils\");\nvar Circle_1 = require(\"../../../Core/Utils/Circle\");\nvar Constants_1 = require(\"../../../Core/Utils/Constants\");\nvar ExternalInteractorBase_1 = require(\"../../../Core/Utils/ExternalInteractorBase\");\nvar Rectangle_1 = require(\"../../../Core/Utils/Rectangle\");\nfunction calculateBubbleValue(particleValue, modeValue, optionsValue, ratio) {\n  if (modeValue >= optionsValue) {\n    var value = particleValue + (modeValue - optionsValue) * ratio;\n    return (0, NumberUtils_1.clamp)(value, particleValue, modeValue);\n  } else if (modeValue < optionsValue) {\n    var _value = particleValue - (optionsValue - modeValue) * ratio;\n    return (0, NumberUtils_1.clamp)(_value, modeValue, particleValue);\n  }\n}\nvar Bubbler = /*#__PURE__*/function (_ExternalInteractorBa) {\n  _inherits(Bubbler, _ExternalInteractorBa);\n  var _super = _createSuper(Bubbler);\n  function Bubbler(container) {\n    var _this;\n    _classCallCheck(this, Bubbler);\n    _this = _super.call(this, container);\n    if (!container.bubble) {\n      container.bubble = {};\n    }\n    _this.handleClickMode = function (mode) {\n      if (mode !== \"bubble\") {\n        return;\n      }\n      if (!container.bubble) {\n        container.bubble = {};\n      }\n      container.bubble.clicking = true;\n    };\n    return _this;\n  }\n  _createClass(Bubbler, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      var container = this.container,\n        options = container.actualOptions,\n        mouse = container.interactivity.mouse,\n        events = options.interactivity.events,\n        divs = events.onDiv,\n        divBubble = (0, Utils_1.isDivModeEnabled)(\"bubble\", divs);\n      if (!(divBubble || events.onHover.enable && mouse.position || events.onClick.enable && mouse.clickPosition)) {\n        return false;\n      }\n      var hoverMode = events.onHover.mode;\n      var clickMode = events.onClick.mode;\n      return (0, Utils_1.isInArray)(\"bubble\", hoverMode) || (0, Utils_1.isInArray)(\"bubble\", clickMode) || divBubble;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset(particle, force) {\n      if (!(!particle.bubble.inRange || force)) {\n        return;\n      }\n      delete particle.bubble.div;\n      delete particle.bubble.opacity;\n      delete particle.bubble.radius;\n      delete particle.bubble.color;\n    }\n  }, {\n    key: \"interact\",\n    value: function () {\n      var _interact = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n        var options, events, onHover, onClick, hoverEnabled, hoverMode, clickEnabled, clickMode, divs;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                options = this.container.actualOptions, events = options.interactivity.events, onHover = events.onHover, onClick = events.onClick, hoverEnabled = onHover.enable, hoverMode = onHover.mode, clickEnabled = onClick.enable, clickMode = onClick.mode, divs = events.onDiv;\n                if (hoverEnabled && (0, Utils_1.isInArray)(\"bubble\", hoverMode)) {\n                  this.hoverBubble();\n                } else if (clickEnabled && (0, Utils_1.isInArray)(\"bubble\", clickMode)) {\n                  this.clickBubble();\n                } else {\n                  (0, Utils_1.divModeExecute)(\"bubble\", divs, function (selector, div) {\n                    return _this2.singleSelectorHover(selector, div);\n                  });\n                }\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function interact() {\n        return _interact.apply(this, arguments);\n      }\n      return interact;\n    }()\n  }, {\n    key: \"singleSelectorHover\",\n    value: function singleSelectorHover(selector, div) {\n      var _this3 = this;\n      var container = this.container,\n        selectors = document.querySelectorAll(selector);\n      if (!selectors.length) {\n        return;\n      }\n      selectors.forEach(function (item) {\n        var elem = item,\n          pxRatio = container.retina.pixelRatio,\n          pos = {\n            x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n            y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio\n          },\n          repulseRadius = elem.offsetWidth / 2 * pxRatio,\n          area = div.type === \"circle\" ? new Circle_1.Circle(pos.x, pos.y, repulseRadius) : new Rectangle_1.Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio),\n          query = container.particles.quadTree.query(area);\n        var _iterator = _createForOfIteratorHelper(query),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var particle = _step.value;\n            if (!area.contains(particle.getPosition())) {\n              continue;\n            }\n            particle.bubble.inRange = true;\n            var divs = container.actualOptions.interactivity.modes.bubble.divs;\n            var divBubble = (0, Utils_1.divMode)(divs, elem);\n            if (!particle.bubble.div || particle.bubble.div !== elem) {\n              _this3.reset(particle, true);\n              particle.bubble.div = elem;\n            }\n            _this3.hoverBubbleSize(particle, 1, divBubble);\n            _this3.hoverBubbleOpacity(particle, 1, divBubble);\n            _this3.hoverBubbleColor(particle, 1, divBubble);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      });\n    }\n  }, {\n    key: \"process\",\n    value: function process(particle, distMouse, timeSpent, data) {\n      var container = this.container,\n        bubbleParam = data.bubbleObj.optValue;\n      if (bubbleParam === undefined) {\n        return;\n      }\n      var options = container.actualOptions,\n        bubbleDuration = options.interactivity.modes.bubble.duration,\n        bubbleDistance = container.retina.bubbleModeDistance,\n        particlesParam = data.particlesObj.optValue,\n        pObjBubble = data.bubbleObj.value,\n        pObj = data.particlesObj.value || 0,\n        type = data.type;\n      if (bubbleParam === particlesParam) {\n        return;\n      }\n      if (!container.bubble) {\n        container.bubble = {};\n      }\n      if (!container.bubble.durationEnd) {\n        if (distMouse <= bubbleDistance) {\n          var obj = pObjBubble !== null && pObjBubble !== void 0 ? pObjBubble : pObj;\n          if (obj !== bubbleParam) {\n            var value = pObj - timeSpent * (pObj - bubbleParam) / bubbleDuration;\n            if (type === \"size\") {\n              particle.bubble.radius = value;\n            }\n            if (type === \"opacity\") {\n              particle.bubble.opacity = value;\n            }\n          }\n        } else {\n          if (type === \"size\") {\n            delete particle.bubble.radius;\n          }\n          if (type === \"opacity\") {\n            delete particle.bubble.opacity;\n          }\n        }\n      } else if (pObjBubble) {\n        if (type === \"size\") {\n          delete particle.bubble.radius;\n        }\n        if (type === \"opacity\") {\n          delete particle.bubble.opacity;\n        }\n      }\n    }\n  }, {\n    key: \"clickBubble\",\n    value: function clickBubble() {\n      var _a, _b;\n      var container = this.container,\n        options = container.actualOptions,\n        mouseClickPos = container.interactivity.mouse.clickPosition;\n      if (!mouseClickPos) {\n        return;\n      }\n      if (!container.bubble) {\n        container.bubble = {};\n      }\n      var distance = container.retina.bubbleModeDistance,\n        query = container.particles.quadTree.queryCircle(mouseClickPos, distance);\n      var _iterator2 = _createForOfIteratorHelper(query),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var particle = _step2.value;\n          if (!container.bubble.clicking) {\n            continue;\n          }\n          particle.bubble.inRange = !container.bubble.durationEnd;\n          var pos = particle.getPosition(),\n            distMouse = (0, NumberUtils_1.getDistance)(pos, mouseClickPos),\n            timeSpent = (new Date().getTime() - (container.interactivity.mouse.clickTime || 0)) / 1000;\n          if (timeSpent > options.interactivity.modes.bubble.duration) {\n            container.bubble.durationEnd = true;\n          }\n          if (timeSpent > options.interactivity.modes.bubble.duration * 2) {\n            container.bubble.clicking = false;\n            container.bubble.durationEnd = false;\n          }\n          var sizeData = {\n            bubbleObj: {\n              optValue: container.retina.bubbleModeSize,\n              value: particle.bubble.radius\n            },\n            particlesObj: {\n              optValue: (0, NumberUtils_1.getRangeMax)(particle.options.size.value) * container.retina.pixelRatio,\n              value: particle.size.value\n            },\n            type: \"size\"\n          };\n          this.process(particle, distMouse, timeSpent, sizeData);\n          var opacityData = {\n            bubbleObj: {\n              optValue: options.interactivity.modes.bubble.opacity,\n              value: particle.bubble.opacity\n            },\n            particlesObj: {\n              optValue: (0, NumberUtils_1.getRangeMax)(particle.options.opacity.value),\n              value: (_b = (_a = particle.opacity) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : 1\n            },\n            type: \"opacity\"\n          };\n          this.process(particle, distMouse, timeSpent, opacityData);\n          if (!container.bubble.durationEnd) {\n            if (distMouse <= container.retina.bubbleModeDistance) {\n              this.hoverBubbleColor(particle, distMouse);\n            } else {\n              delete particle.bubble.color;\n            }\n          } else {\n            delete particle.bubble.color;\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  }, {\n    key: \"hoverBubble\",\n    value: function hoverBubble() {\n      var container = this.container,\n        mousePos = container.interactivity.mouse.position;\n      if (mousePos === undefined) {\n        return;\n      }\n      var distance = container.retina.bubbleModeDistance,\n        query = container.particles.quadTree.queryCircle(mousePos, distance);\n      var _iterator3 = _createForOfIteratorHelper(query),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var particle = _step3.value;\n          particle.bubble.inRange = true;\n          var pos = particle.getPosition(),\n            pointDistance = (0, NumberUtils_1.getDistance)(pos, mousePos),\n            ratio = 1 - pointDistance / distance;\n          if (pointDistance <= distance) {\n            if (ratio >= 0 && container.interactivity.status === Constants_1.Constants.mouseMoveEvent) {\n              this.hoverBubbleSize(particle, ratio);\n              this.hoverBubbleOpacity(particle, ratio);\n              this.hoverBubbleColor(particle, ratio);\n            }\n          } else {\n            this.reset(particle);\n          }\n          if (container.interactivity.status === Constants_1.Constants.mouseLeaveEvent) {\n            this.reset(particle);\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n  }, {\n    key: \"hoverBubbleSize\",\n    value: function hoverBubbleSize(particle, ratio, divBubble) {\n      var container = this.container,\n        modeSize = (divBubble === null || divBubble === void 0 ? void 0 : divBubble.size) ? divBubble.size * container.retina.pixelRatio : container.retina.bubbleModeSize;\n      if (modeSize === undefined) {\n        return;\n      }\n      var optSize = (0, NumberUtils_1.getRangeMax)(particle.options.size.value) * container.retina.pixelRatio;\n      var pSize = particle.size.value;\n      var size = calculateBubbleValue(pSize, modeSize, optSize, ratio);\n      if (size !== undefined) {\n        particle.bubble.radius = size;\n      }\n    }\n  }, {\n    key: \"hoverBubbleOpacity\",\n    value: function hoverBubbleOpacity(particle, ratio, divBubble) {\n      var _a, _b, _c;\n      var container = this.container,\n        options = container.actualOptions,\n        modeOpacity = (_a = divBubble === null || divBubble === void 0 ? void 0 : divBubble.opacity) !== null && _a !== void 0 ? _a : options.interactivity.modes.bubble.opacity;\n      if (!modeOpacity) {\n        return;\n      }\n      var optOpacity = particle.options.opacity.value;\n      var pOpacity = (_c = (_b = particle.opacity) === null || _b === void 0 ? void 0 : _b.value) !== null && _c !== void 0 ? _c : 1;\n      var opacity = calculateBubbleValue(pOpacity, modeOpacity, (0, NumberUtils_1.getRangeMax)(optOpacity), ratio);\n      if (opacity !== undefined) {\n        particle.bubble.opacity = opacity;\n      }\n    }\n  }, {\n    key: \"hoverBubbleColor\",\n    value: function hoverBubbleColor(particle, ratio, divBubble) {\n      var options = this.container.actualOptions;\n      var bubbleOptions = divBubble !== null && divBubble !== void 0 ? divBubble : options.interactivity.modes.bubble;\n      if (!particle.bubble.finalColor) {\n        var modeColor = bubbleOptions.color;\n        if (!modeColor) {\n          return;\n        }\n        var bubbleColor = modeColor instanceof Array ? (0, Utils_1.itemFromArray)(modeColor) : modeColor;\n        particle.bubble.finalColor = (0, ColorUtils_1.colorToHsl)(bubbleColor);\n      }\n      if (!particle.bubble.finalColor) {\n        return;\n      }\n      if (bubbleOptions.mix) {\n        particle.bubble.color = undefined;\n        var pColor = particle.getFillColor();\n        particle.bubble.color = pColor ? (0, ColorUtils_1.rgbToHsl)((0, ColorUtils_1.colorMix)(pColor, particle.bubble.finalColor, 1 - ratio, ratio)) : particle.bubble.finalColor;\n      } else {\n        particle.bubble.color = particle.bubble.finalColor;\n      }\n    }\n  }]);\n  return Bubbler;\n}(ExternalInteractorBase_1.ExternalInteractorBase);\nexports.Bubbler = Bubbler;","map":{"version":3,"names":["_createForOfIteratorHelper","require","default","_regeneratorRuntime","_asyncToGenerator","_classCallCheck","_createClass","_inherits","_createSuper","Object","defineProperty","exports","value","Bubbler","NumberUtils_1","ColorUtils_1","Utils_1","Circle_1","Constants_1","ExternalInteractorBase_1","Rectangle_1","calculateBubbleValue","particleValue","modeValue","optionsValue","ratio","clamp","_ExternalInteractorBa","_super","container","_this","call","bubble","handleClickMode","mode","clicking","key","isEnabled","options","actualOptions","mouse","interactivity","events","divs","onDiv","divBubble","isDivModeEnabled","onHover","enable","position","onClick","clickPosition","hoverMode","clickMode","isInArray","reset","particle","force","inRange","div","opacity","radius","color","_interact","mark","_callee","_this2","hoverEnabled","clickEnabled","wrap","_callee$","_context","prev","next","hoverBubble","clickBubble","divModeExecute","selector","singleSelectorHover","stop","interact","apply","arguments","_this3","selectors","document","querySelectorAll","length","forEach","item","elem","pxRatio","retina","pixelRatio","pos","x","offsetLeft","offsetWidth","y","offsetTop","offsetHeight","repulseRadius","area","type","Circle","Rectangle","query","particles","quadTree","_iterator","_step","s","n","done","contains","getPosition","modes","divMode","hoverBubbleSize","hoverBubbleOpacity","hoverBubbleColor","err","e","f","process","distMouse","timeSpent","data","bubbleParam","bubbleObj","optValue","undefined","bubbleDuration","duration","bubbleDistance","bubbleModeDistance","particlesParam","particlesObj","pObjBubble","pObj","durationEnd","obj","_a","_b","mouseClickPos","distance","queryCircle","_iterator2","_step2","getDistance","Date","getTime","clickTime","sizeData","bubbleModeSize","getRangeMax","size","opacityData","mousePos","_iterator3","_step3","pointDistance","status","Constants","mouseMoveEvent","mouseLeaveEvent","modeSize","optSize","pSize","_c","modeOpacity","optOpacity","pOpacity","bubbleOptions","finalColor","modeColor","bubbleColor","Array","itemFromArray","colorToHsl","mix","pColor","getFillColor","rgbToHsl","colorMix","ExternalInteractorBase"],"sources":["/Users/yutika/Documents/YutikaPortfolio/node_modules/tsparticles/cjs/Interactions/External/Bubble/Bubbler.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Bubbler = void 0;\nconst NumberUtils_1 = require(\"../../../Utils/NumberUtils\");\nconst ColorUtils_1 = require(\"../../../Utils/ColorUtils\");\nconst Utils_1 = require(\"../../../Utils/Utils\");\nconst Circle_1 = require(\"../../../Core/Utils/Circle\");\nconst Constants_1 = require(\"../../../Core/Utils/Constants\");\nconst ExternalInteractorBase_1 = require(\"../../../Core/Utils/ExternalInteractorBase\");\nconst Rectangle_1 = require(\"../../../Core/Utils/Rectangle\");\nfunction calculateBubbleValue(particleValue, modeValue, optionsValue, ratio) {\n    if (modeValue >= optionsValue) {\n        const value = particleValue + (modeValue - optionsValue) * ratio;\n        return (0, NumberUtils_1.clamp)(value, particleValue, modeValue);\n    }\n    else if (modeValue < optionsValue) {\n        const value = particleValue - (optionsValue - modeValue) * ratio;\n        return (0, NumberUtils_1.clamp)(value, modeValue, particleValue);\n    }\n}\nclass Bubbler extends ExternalInteractorBase_1.ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        if (!container.bubble) {\n            container.bubble = {};\n        }\n        this.handleClickMode = (mode) => {\n            if (mode !== \"bubble\") {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            container.bubble.clicking = true;\n        };\n    }\n    isEnabled() {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = options.interactivity.events, divs = events.onDiv, divBubble = (0, Utils_1.isDivModeEnabled)(\"bubble\", divs);\n        if (!(divBubble || (events.onHover.enable && mouse.position) || (events.onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode;\n        const clickMode = events.onClick.mode;\n        return (0, Utils_1.isInArray)(\"bubble\", hoverMode) || (0, Utils_1.isInArray)(\"bubble\", clickMode) || divBubble;\n    }\n    reset(particle, force) {\n        if (!(!particle.bubble.inRange || force)) {\n            return;\n        }\n        delete particle.bubble.div;\n        delete particle.bubble.opacity;\n        delete particle.bubble.radius;\n        delete particle.bubble.color;\n    }\n    async interact() {\n        const options = this.container.actualOptions, events = options.interactivity.events, onHover = events.onHover, onClick = events.onClick, hoverEnabled = onHover.enable, hoverMode = onHover.mode, clickEnabled = onClick.enable, clickMode = onClick.mode, divs = events.onDiv;\n        if (hoverEnabled && (0, Utils_1.isInArray)(\"bubble\", hoverMode)) {\n            this.hoverBubble();\n        }\n        else if (clickEnabled && (0, Utils_1.isInArray)(\"bubble\", clickMode)) {\n            this.clickBubble();\n        }\n        else {\n            (0, Utils_1.divModeExecute)(\"bubble\", divs, (selector, div) => this.singleSelectorHover(selector, div));\n        }\n    }\n    singleSelectorHover(selector, div) {\n        const container = this.container, selectors = document.querySelectorAll(selector);\n        if (!selectors.length) {\n            return;\n        }\n        selectors.forEach((item) => {\n            const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n            }, repulseRadius = (elem.offsetWidth / 2) * pxRatio, area = div.type === \"circle\"\n                ? new Circle_1.Circle(pos.x, pos.y, repulseRadius)\n                : new Rectangle_1.Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), query = container.particles.quadTree.query(area);\n            for (const particle of query) {\n                if (!area.contains(particle.getPosition())) {\n                    continue;\n                }\n                particle.bubble.inRange = true;\n                const divs = container.actualOptions.interactivity.modes.bubble.divs;\n                const divBubble = (0, Utils_1.divMode)(divs, elem);\n                if (!particle.bubble.div || particle.bubble.div !== elem) {\n                    this.reset(particle, true);\n                    particle.bubble.div = elem;\n                }\n                this.hoverBubbleSize(particle, 1, divBubble);\n                this.hoverBubbleOpacity(particle, 1, divBubble);\n                this.hoverBubbleColor(particle, 1, divBubble);\n            }\n        });\n    }\n    process(particle, distMouse, timeSpent, data) {\n        const container = this.container, bubbleParam = data.bubbleObj.optValue;\n        if (bubbleParam === undefined) {\n            return;\n        }\n        const options = container.actualOptions, bubbleDuration = options.interactivity.modes.bubble.duration, bubbleDistance = container.retina.bubbleModeDistance, particlesParam = data.particlesObj.optValue, pObjBubble = data.bubbleObj.value, pObj = data.particlesObj.value || 0, type = data.type;\n        if (bubbleParam === particlesParam) {\n            return;\n        }\n        if (!container.bubble) {\n            container.bubble = {};\n        }\n        if (!container.bubble.durationEnd) {\n            if (distMouse <= bubbleDistance) {\n                const obj = pObjBubble !== null && pObjBubble !== void 0 ? pObjBubble : pObj;\n                if (obj !== bubbleParam) {\n                    const value = pObj - (timeSpent * (pObj - bubbleParam)) / bubbleDuration;\n                    if (type === \"size\") {\n                        particle.bubble.radius = value;\n                    }\n                    if (type === \"opacity\") {\n                        particle.bubble.opacity = value;\n                    }\n                }\n            }\n            else {\n                if (type === \"size\") {\n                    delete particle.bubble.radius;\n                }\n                if (type === \"opacity\") {\n                    delete particle.bubble.opacity;\n                }\n            }\n        }\n        else if (pObjBubble) {\n            if (type === \"size\") {\n                delete particle.bubble.radius;\n            }\n            if (type === \"opacity\") {\n                delete particle.bubble.opacity;\n            }\n        }\n    }\n    clickBubble() {\n        var _a, _b;\n        const container = this.container, options = container.actualOptions, mouseClickPos = container.interactivity.mouse.clickPosition;\n        if (!mouseClickPos) {\n            return;\n        }\n        if (!container.bubble) {\n            container.bubble = {};\n        }\n        const distance = container.retina.bubbleModeDistance, query = container.particles.quadTree.queryCircle(mouseClickPos, distance);\n        for (const particle of query) {\n            if (!container.bubble.clicking) {\n                continue;\n            }\n            particle.bubble.inRange = !container.bubble.durationEnd;\n            const pos = particle.getPosition(), distMouse = (0, NumberUtils_1.getDistance)(pos, mouseClickPos), timeSpent = (new Date().getTime() - (container.interactivity.mouse.clickTime || 0)) / 1000;\n            if (timeSpent > options.interactivity.modes.bubble.duration) {\n                container.bubble.durationEnd = true;\n            }\n            if (timeSpent > options.interactivity.modes.bubble.duration * 2) {\n                container.bubble.clicking = false;\n                container.bubble.durationEnd = false;\n            }\n            const sizeData = {\n                bubbleObj: {\n                    optValue: container.retina.bubbleModeSize,\n                    value: particle.bubble.radius,\n                },\n                particlesObj: {\n                    optValue: (0, NumberUtils_1.getRangeMax)(particle.options.size.value) * container.retina.pixelRatio,\n                    value: particle.size.value,\n                },\n                type: \"size\",\n            };\n            this.process(particle, distMouse, timeSpent, sizeData);\n            const opacityData = {\n                bubbleObj: {\n                    optValue: options.interactivity.modes.bubble.opacity,\n                    value: particle.bubble.opacity,\n                },\n                particlesObj: {\n                    optValue: (0, NumberUtils_1.getRangeMax)(particle.options.opacity.value),\n                    value: (_b = (_a = particle.opacity) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : 1,\n                },\n                type: \"opacity\",\n            };\n            this.process(particle, distMouse, timeSpent, opacityData);\n            if (!container.bubble.durationEnd) {\n                if (distMouse <= container.retina.bubbleModeDistance) {\n                    this.hoverBubbleColor(particle, distMouse);\n                }\n                else {\n                    delete particle.bubble.color;\n                }\n            }\n            else {\n                delete particle.bubble.color;\n            }\n        }\n    }\n    hoverBubble() {\n        const container = this.container, mousePos = container.interactivity.mouse.position;\n        if (mousePos === undefined) {\n            return;\n        }\n        const distance = container.retina.bubbleModeDistance, query = container.particles.quadTree.queryCircle(mousePos, distance);\n        for (const particle of query) {\n            particle.bubble.inRange = true;\n            const pos = particle.getPosition(), pointDistance = (0, NumberUtils_1.getDistance)(pos, mousePos), ratio = 1 - pointDistance / distance;\n            if (pointDistance <= distance) {\n                if (ratio >= 0 && container.interactivity.status === Constants_1.Constants.mouseMoveEvent) {\n                    this.hoverBubbleSize(particle, ratio);\n                    this.hoverBubbleOpacity(particle, ratio);\n                    this.hoverBubbleColor(particle, ratio);\n                }\n            }\n            else {\n                this.reset(particle);\n            }\n            if (container.interactivity.status === Constants_1.Constants.mouseLeaveEvent) {\n                this.reset(particle);\n            }\n        }\n    }\n    hoverBubbleSize(particle, ratio, divBubble) {\n        const container = this.container, modeSize = (divBubble === null || divBubble === void 0 ? void 0 : divBubble.size) ? divBubble.size * container.retina.pixelRatio : container.retina.bubbleModeSize;\n        if (modeSize === undefined) {\n            return;\n        }\n        const optSize = (0, NumberUtils_1.getRangeMax)(particle.options.size.value) * container.retina.pixelRatio;\n        const pSize = particle.size.value;\n        const size = calculateBubbleValue(pSize, modeSize, optSize, ratio);\n        if (size !== undefined) {\n            particle.bubble.radius = size;\n        }\n    }\n    hoverBubbleOpacity(particle, ratio, divBubble) {\n        var _a, _b, _c;\n        const container = this.container, options = container.actualOptions, modeOpacity = (_a = divBubble === null || divBubble === void 0 ? void 0 : divBubble.opacity) !== null && _a !== void 0 ? _a : options.interactivity.modes.bubble.opacity;\n        if (!modeOpacity) {\n            return;\n        }\n        const optOpacity = particle.options.opacity.value;\n        const pOpacity = (_c = (_b = particle.opacity) === null || _b === void 0 ? void 0 : _b.value) !== null && _c !== void 0 ? _c : 1;\n        const opacity = calculateBubbleValue(pOpacity, modeOpacity, (0, NumberUtils_1.getRangeMax)(optOpacity), ratio);\n        if (opacity !== undefined) {\n            particle.bubble.opacity = opacity;\n        }\n    }\n    hoverBubbleColor(particle, ratio, divBubble) {\n        const options = this.container.actualOptions;\n        const bubbleOptions = divBubble !== null && divBubble !== void 0 ? divBubble : options.interactivity.modes.bubble;\n        if (!particle.bubble.finalColor) {\n            const modeColor = bubbleOptions.color;\n            if (!modeColor) {\n                return;\n            }\n            const bubbleColor = modeColor instanceof Array ? (0, Utils_1.itemFromArray)(modeColor) : modeColor;\n            particle.bubble.finalColor = (0, ColorUtils_1.colorToHsl)(bubbleColor);\n        }\n        if (!particle.bubble.finalColor) {\n            return;\n        }\n        if (bubbleOptions.mix) {\n            particle.bubble.color = undefined;\n            const pColor = particle.getFillColor();\n            particle.bubble.color = pColor\n                ? (0, ColorUtils_1.rgbToHsl)((0, ColorUtils_1.colorMix)(pColor, particle.bubble.finalColor, 1 - ratio, ratio))\n                : particle.bubble.finalColor;\n        }\n        else {\n            particle.bubble.color = particle.bubble.finalColor;\n        }\n    }\n}\nexports.Bubbler = Bubbler;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}