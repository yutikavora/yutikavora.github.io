{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/yutika/Documents/YutikaPortfolio/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/yutika/Documents/YutikaPortfolio/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AbsorberInstance = void 0;\nvar NumberUtils_1 = require(\"../../Utils/NumberUtils\");\nvar ColorUtils_1 = require(\"../../Utils/ColorUtils\");\nvar Absorber_1 = require(\"./Options/Classes/Absorber\");\nvar Vector_1 = require(\"../../Core/Utils/Vector\");\nvar Utils_1 = require(\"../../Utils/Utils\");\nvar AbsorberInstance = /*#__PURE__*/function () {\n  function AbsorberInstance(absorbers, container, options, position) {\n    _classCallCheck(this, AbsorberInstance);\n    var _a, _b, _c;\n    this.absorbers = absorbers;\n    this.container = container;\n    this.initialPosition = position ? Vector_1.Vector.create(position.x, position.y) : undefined;\n    if (options instanceof Absorber_1.Absorber) {\n      this.options = options;\n    } else {\n      this.options = new Absorber_1.Absorber();\n      this.options.load(options);\n    }\n    this.dragging = false;\n    this.name = this.options.name;\n    this.opacity = this.options.opacity;\n    this.size = (0, NumberUtils_1.getRangeValue)(this.options.size.value) * container.retina.pixelRatio;\n    this.mass = this.size * this.options.size.density * container.retina.reduceFactor;\n    var limit = this.options.size.limit;\n    this.limit = {\n      radius: limit.radius * container.retina.pixelRatio * container.retina.reduceFactor,\n      mass: limit.mass\n    };\n    this.color = (_a = (0, ColorUtils_1.colorToRgb)(this.options.color)) !== null && _a !== void 0 ? _a : {\n      b: 0,\n      g: 0,\n      r: 0\n    };\n    this.position = (_c = (_b = this.initialPosition) === null || _b === void 0 ? void 0 : _b.copy()) !== null && _c !== void 0 ? _c : this.calcPosition();\n  }\n  _createClass(AbsorberInstance, [{\n    key: \"attract\",\n    value: function attract(particle) {\n      var container = this.container,\n        options = this.options;\n      if (options.draggable) {\n        var mouse = container.interactivity.mouse;\n        if (mouse.clicking && mouse.downPosition) {\n          var mouseDist = (0, NumberUtils_1.getDistance)(this.position, mouse.downPosition);\n          if (mouseDist <= this.size) {\n            this.dragging = true;\n          }\n        } else {\n          this.dragging = false;\n        }\n        if (this.dragging && mouse.position) {\n          this.position.x = mouse.position.x;\n          this.position.y = mouse.position.y;\n        }\n      }\n      var pos = particle.getPosition(),\n        _ref = (0, NumberUtils_1.getDistances)(this.position, pos),\n        dx = _ref.dx,\n        dy = _ref.dy,\n        distance = _ref.distance,\n        v = Vector_1.Vector.create(dx, dy);\n      v.length = this.mass / Math.pow(distance, 2) * container.retina.reduceFactor;\n      if (distance < this.size + particle.getRadius()) {\n        var sizeFactor = particle.getRadius() * 0.033 * container.retina.pixelRatio;\n        if (this.size > particle.getRadius() && distance < this.size - particle.getRadius() || particle.absorberOrbit !== undefined && particle.absorberOrbit.length < 0) {\n          if (options.destroy) {\n            particle.destroy();\n          } else {\n            particle.needsNewPosition = true;\n            this.updateParticlePosition(particle, v);\n          }\n        } else {\n          if (options.destroy) {\n            particle.size.value -= sizeFactor;\n          }\n          this.updateParticlePosition(particle, v);\n        }\n        if (this.limit.radius <= 0 || this.size < this.limit.radius) {\n          this.size += sizeFactor;\n        }\n        if (this.limit.mass <= 0 || this.mass < this.limit.mass) {\n          this.mass += sizeFactor * this.options.size.density * container.retina.reduceFactor;\n        }\n      } else {\n        this.updateParticlePosition(particle, v);\n      }\n    }\n  }, {\n    key: \"resize\",\n    value: function resize() {\n      var initialPosition = this.initialPosition;\n      this.position = initialPosition && (0, Utils_1.isPointInside)(initialPosition, this.container.canvas.size) ? initialPosition : this.calcPosition();\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(context) {\n      context.translate(this.position.x, this.position.y);\n      context.beginPath();\n      context.arc(0, 0, this.size, 0, Math.PI * 2, false);\n      context.closePath();\n      context.fillStyle = (0, ColorUtils_1.getStyleFromRgb)(this.color, this.opacity);\n      context.fill();\n    }\n  }, {\n    key: \"calcPosition\",\n    value: function calcPosition() {\n      var exactPosition = (0, NumberUtils_1.calcPositionOrRandomFromSizeRanged)({\n        size: this.container.canvas.size,\n        position: this.options.position\n      });\n      return Vector_1.Vector.create(exactPosition.x, exactPosition.y);\n    }\n  }, {\n    key: \"updateParticlePosition\",\n    value: function updateParticlePosition(particle, v) {\n      var _a;\n      if (particle.destroyed) {\n        return;\n      }\n      var container = this.container,\n        canvasSize = container.canvas.size;\n      if (particle.needsNewPosition) {\n        var newPosition = (0, NumberUtils_1.calcPositionOrRandomFromSize)({\n          size: canvasSize\n        });\n        particle.position.setTo(newPosition);\n        particle.velocity.setTo(particle.initialVelocity);\n        particle.absorberOrbit = undefined;\n        particle.needsNewPosition = false;\n      }\n      if (this.options.orbits) {\n        if (particle.absorberOrbit === undefined) {\n          particle.absorberOrbit = Vector_1.Vector.create(0, 0);\n          particle.absorberOrbit.length = (0, NumberUtils_1.getDistance)(particle.getPosition(), this.position);\n          particle.absorberOrbit.angle = Math.random() * Math.PI * 2;\n        }\n        if (particle.absorberOrbit.length <= this.size && !this.options.destroy) {\n          var minSize = Math.min(canvasSize.width, canvasSize.height);\n          particle.absorberOrbit.length = minSize * (1 + (Math.random() * 0.2 - 0.1));\n        }\n        if (particle.absorberOrbitDirection === undefined) {\n          particle.absorberOrbitDirection = particle.velocity.x >= 0 ? \"clockwise\" : \"counter-clockwise\";\n        }\n        var orbitRadius = particle.absorberOrbit.length,\n          orbitAngle = particle.absorberOrbit.angle,\n          orbitDirection = particle.absorberOrbitDirection;\n        particle.velocity.setTo(Vector_1.Vector.origin);\n        var updateFunc = {\n          x: orbitDirection === \"clockwise\" ? Math.cos : Math.sin,\n          y: orbitDirection === \"clockwise\" ? Math.sin : Math.cos\n        };\n        particle.position.x = this.position.x + orbitRadius * updateFunc.x(orbitAngle);\n        particle.position.y = this.position.y + orbitRadius * updateFunc.y(orbitAngle);\n        particle.absorberOrbit.length -= v.length;\n        particle.absorberOrbit.angle += ((_a = particle.retina.moveSpeed) !== null && _a !== void 0 ? _a : 0) * container.retina.pixelRatio / 100 * container.retina.reduceFactor;\n      } else {\n        var addV = Vector_1.Vector.origin;\n        addV.length = v.length;\n        addV.angle = v.angle;\n        particle.velocity.addTo(addV);\n      }\n    }\n  }]);\n  return AbsorberInstance;\n}();\nexports.AbsorberInstance = AbsorberInstance;","map":{"version":3,"names":["_classCallCheck","require","default","_createClass","Object","defineProperty","exports","value","AbsorberInstance","NumberUtils_1","ColorUtils_1","Absorber_1","Vector_1","Utils_1","absorbers","container","options","position","_a","_b","_c","initialPosition","Vector","create","x","y","undefined","Absorber","load","dragging","name","opacity","size","getRangeValue","retina","pixelRatio","mass","density","reduceFactor","limit","radius","color","colorToRgb","b","g","r","copy","calcPosition","key","attract","particle","draggable","mouse","interactivity","clicking","downPosition","mouseDist","getDistance","pos","getPosition","_ref","getDistances","dx","dy","distance","v","length","Math","pow","getRadius","sizeFactor","absorberOrbit","destroy","needsNewPosition","updateParticlePosition","resize","isPointInside","canvas","draw","context","translate","beginPath","arc","PI","closePath","fillStyle","getStyleFromRgb","fill","exactPosition","calcPositionOrRandomFromSizeRanged","destroyed","canvasSize","newPosition","calcPositionOrRandomFromSize","setTo","velocity","initialVelocity","orbits","angle","random","minSize","min","width","height","absorberOrbitDirection","orbitRadius","orbitAngle","orbitDirection","origin","updateFunc","cos","sin","moveSpeed","addV","addTo"],"sources":["/Users/yutika/Documents/YutikaPortfolio/node_modules/tsparticles/cjs/Plugins/Absorbers/AbsorberInstance.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbsorberInstance = void 0;\nconst NumberUtils_1 = require(\"../../Utils/NumberUtils\");\nconst ColorUtils_1 = require(\"../../Utils/ColorUtils\");\nconst Absorber_1 = require(\"./Options/Classes/Absorber\");\nconst Vector_1 = require(\"../../Core/Utils/Vector\");\nconst Utils_1 = require(\"../../Utils/Utils\");\nclass AbsorberInstance {\n    constructor(absorbers, container, options, position) {\n        var _a, _b, _c;\n        this.absorbers = absorbers;\n        this.container = container;\n        this.initialPosition = position ? Vector_1.Vector.create(position.x, position.y) : undefined;\n        if (options instanceof Absorber_1.Absorber) {\n            this.options = options;\n        }\n        else {\n            this.options = new Absorber_1.Absorber();\n            this.options.load(options);\n        }\n        this.dragging = false;\n        this.name = this.options.name;\n        this.opacity = this.options.opacity;\n        this.size = (0, NumberUtils_1.getRangeValue)(this.options.size.value) * container.retina.pixelRatio;\n        this.mass = this.size * this.options.size.density * container.retina.reduceFactor;\n        const limit = this.options.size.limit;\n        this.limit = {\n            radius: limit.radius * container.retina.pixelRatio * container.retina.reduceFactor,\n            mass: limit.mass,\n        };\n        this.color = (_a = (0, ColorUtils_1.colorToRgb)(this.options.color)) !== null && _a !== void 0 ? _a : {\n            b: 0,\n            g: 0,\n            r: 0,\n        };\n        this.position = (_c = (_b = this.initialPosition) === null || _b === void 0 ? void 0 : _b.copy()) !== null && _c !== void 0 ? _c : this.calcPosition();\n    }\n    attract(particle) {\n        const container = this.container, options = this.options;\n        if (options.draggable) {\n            const mouse = container.interactivity.mouse;\n            if (mouse.clicking && mouse.downPosition) {\n                const mouseDist = (0, NumberUtils_1.getDistance)(this.position, mouse.downPosition);\n                if (mouseDist <= this.size) {\n                    this.dragging = true;\n                }\n            }\n            else {\n                this.dragging = false;\n            }\n            if (this.dragging && mouse.position) {\n                this.position.x = mouse.position.x;\n                this.position.y = mouse.position.y;\n            }\n        }\n        const pos = particle.getPosition(), { dx, dy, distance } = (0, NumberUtils_1.getDistances)(this.position, pos), v = Vector_1.Vector.create(dx, dy);\n        v.length = (this.mass / Math.pow(distance, 2)) * container.retina.reduceFactor;\n        if (distance < this.size + particle.getRadius()) {\n            const sizeFactor = particle.getRadius() * 0.033 * container.retina.pixelRatio;\n            if ((this.size > particle.getRadius() && distance < this.size - particle.getRadius()) ||\n                (particle.absorberOrbit !== undefined && particle.absorberOrbit.length < 0)) {\n                if (options.destroy) {\n                    particle.destroy();\n                }\n                else {\n                    particle.needsNewPosition = true;\n                    this.updateParticlePosition(particle, v);\n                }\n            }\n            else {\n                if (options.destroy) {\n                    particle.size.value -= sizeFactor;\n                }\n                this.updateParticlePosition(particle, v);\n            }\n            if (this.limit.radius <= 0 || this.size < this.limit.radius) {\n                this.size += sizeFactor;\n            }\n            if (this.limit.mass <= 0 || this.mass < this.limit.mass) {\n                this.mass += sizeFactor * this.options.size.density * container.retina.reduceFactor;\n            }\n        }\n        else {\n            this.updateParticlePosition(particle, v);\n        }\n    }\n    resize() {\n        const initialPosition = this.initialPosition;\n        this.position =\n            initialPosition && (0, Utils_1.isPointInside)(initialPosition, this.container.canvas.size)\n                ? initialPosition\n                : this.calcPosition();\n    }\n    draw(context) {\n        context.translate(this.position.x, this.position.y);\n        context.beginPath();\n        context.arc(0, 0, this.size, 0, Math.PI * 2, false);\n        context.closePath();\n        context.fillStyle = (0, ColorUtils_1.getStyleFromRgb)(this.color, this.opacity);\n        context.fill();\n    }\n    calcPosition() {\n        const exactPosition = (0, NumberUtils_1.calcPositionOrRandomFromSizeRanged)({\n            size: this.container.canvas.size,\n            position: this.options.position,\n        });\n        return Vector_1.Vector.create(exactPosition.x, exactPosition.y);\n    }\n    updateParticlePosition(particle, v) {\n        var _a;\n        if (particle.destroyed) {\n            return;\n        }\n        const container = this.container, canvasSize = container.canvas.size;\n        if (particle.needsNewPosition) {\n            const newPosition = (0, NumberUtils_1.calcPositionOrRandomFromSize)({ size: canvasSize });\n            particle.position.setTo(newPosition);\n            particle.velocity.setTo(particle.initialVelocity);\n            particle.absorberOrbit = undefined;\n            particle.needsNewPosition = false;\n        }\n        if (this.options.orbits) {\n            if (particle.absorberOrbit === undefined) {\n                particle.absorberOrbit = Vector_1.Vector.create(0, 0);\n                particle.absorberOrbit.length = (0, NumberUtils_1.getDistance)(particle.getPosition(), this.position);\n                particle.absorberOrbit.angle = Math.random() * Math.PI * 2;\n            }\n            if (particle.absorberOrbit.length <= this.size && !this.options.destroy) {\n                const minSize = Math.min(canvasSize.width, canvasSize.height);\n                particle.absorberOrbit.length = minSize * (1 + (Math.random() * 0.2 - 0.1));\n            }\n            if (particle.absorberOrbitDirection === undefined) {\n                particle.absorberOrbitDirection =\n                    particle.velocity.x >= 0 ? \"clockwise\" : \"counter-clockwise\";\n            }\n            const orbitRadius = particle.absorberOrbit.length, orbitAngle = particle.absorberOrbit.angle, orbitDirection = particle.absorberOrbitDirection;\n            particle.velocity.setTo(Vector_1.Vector.origin);\n            const updateFunc = {\n                x: orbitDirection === \"clockwise\" ? Math.cos : Math.sin,\n                y: orbitDirection === \"clockwise\" ? Math.sin : Math.cos,\n            };\n            particle.position.x = this.position.x + orbitRadius * updateFunc.x(orbitAngle);\n            particle.position.y = this.position.y + orbitRadius * updateFunc.y(orbitAngle);\n            particle.absorberOrbit.length -= v.length;\n            particle.absorberOrbit.angle +=\n                ((((_a = particle.retina.moveSpeed) !== null && _a !== void 0 ? _a : 0) * container.retina.pixelRatio) / 100) *\n                    container.retina.reduceFactor;\n        }\n        else {\n            const addV = Vector_1.Vector.origin;\n            addV.length = v.length;\n            addV.angle = v.angle;\n            particle.velocity.addTo(addV);\n        }\n    }\n}\nexports.AbsorberInstance = AbsorberInstance;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}