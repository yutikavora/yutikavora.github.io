{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/Users/yutika/Documents/YutikaPortfolio/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\nvar _createForOfIteratorHelper = require(\"/Users/yutika/Documents/YutikaPortfolio/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _classCallCheck = require(\"/Users/yutika/Documents/YutikaPortfolio/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/yutika/Documents/YutikaPortfolio/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Particle_engine;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Particle = void 0;\nvar NumberUtils_1 = require(\"../Utils/NumberUtils\");\nvar ColorUtils_1 = require(\"../Utils/ColorUtils\");\nvar Utils_1 = require(\"../Utils/Utils\");\nvar ParticlesOptions_1 = require(\"../Options/Classes/Particles/ParticlesOptions\");\nvar Shape_1 = require(\"../Options/Classes/Particles/Shape/Shape\");\nvar Vector_1 = require(\"./Utils/Vector\");\nvar Vector3d_1 = require(\"./Utils/Vector3d\");\nvar CanvasUtils_1 = require(\"../Utils/CanvasUtils\");\nvar fixOutMode = function fixOutMode(data) {\n  if (!((0, Utils_1.isInArray)(data.outMode, data.checkModes) || (0, Utils_1.isInArray)(data.outMode, data.checkModes))) {\n    return;\n  }\n  if (data.coord > data.maxCoord - data.radius * 2) {\n    data.setCb(-data.radius);\n  } else if (data.coord < data.radius * 2) {\n    data.setCb(data.radius);\n  }\n};\nvar Particle = /*#__PURE__*/function () {\n  function Particle(engine, id, container, position, overrideOptions, group) {\n    _classCallCheck(this, Particle);\n    var _a, _b, _c, _d, _e, _f, _g;\n    this.id = id;\n    this.container = container;\n    this.group = group;\n    _Particle_engine.set(this, void 0);\n    __classPrivateFieldSet(this, _Particle_engine, engine, \"f\");\n    this.fill = true;\n    this.close = true;\n    this.lastPathTime = 0;\n    this.destroyed = false;\n    this.unbreakable = false;\n    this.splitCount = 0;\n    this.misplaced = false;\n    this.retina = {\n      maxDistance: {}\n    };\n    this.ignoresResizeRatio = true;\n    var pxRatio = container.retina.pixelRatio,\n      mainOptions = container.actualOptions,\n      particlesOptions = new ParticlesOptions_1.ParticlesOptions();\n    particlesOptions.load(mainOptions.particles);\n    var shapeType = particlesOptions.shape.type,\n      reduceDuplicates = particlesOptions.reduceDuplicates;\n    this.shape = shapeType instanceof Array ? (0, Utils_1.itemFromArray)(shapeType, this.id, reduceDuplicates) : shapeType;\n    if (overrideOptions === null || overrideOptions === void 0 ? void 0 : overrideOptions.shape) {\n      if (overrideOptions.shape.type) {\n        var overrideShapeType = overrideOptions.shape.type;\n        this.shape = overrideShapeType instanceof Array ? (0, Utils_1.itemFromArray)(overrideShapeType, this.id, reduceDuplicates) : overrideShapeType;\n      }\n      var shapeOptions = new Shape_1.Shape();\n      shapeOptions.load(overrideOptions.shape);\n      if (this.shape) {\n        this.shapeData = this.loadShapeData(shapeOptions, reduceDuplicates);\n      }\n    } else {\n      this.shapeData = this.loadShapeData(particlesOptions.shape, reduceDuplicates);\n    }\n    if (overrideOptions !== undefined) {\n      particlesOptions.load(overrideOptions);\n    }\n    if (((_a = this.shapeData) === null || _a === void 0 ? void 0 : _a.particles) !== undefined) {\n      particlesOptions.load((_b = this.shapeData) === null || _b === void 0 ? void 0 : _b.particles);\n    }\n    this.fill = (_d = (_c = this.shapeData) === null || _c === void 0 ? void 0 : _c.fill) !== null && _d !== void 0 ? _d : this.fill;\n    this.close = (_f = (_e = this.shapeData) === null || _e === void 0 ? void 0 : _e.close) !== null && _f !== void 0 ? _f : this.close;\n    this.options = particlesOptions;\n    this.pathDelay = (0, NumberUtils_1.getValue)(this.options.move.path.delay) * 1000;\n    var zIndexValue = (0, NumberUtils_1.getRangeValue)(this.options.zIndex.value);\n    container.retina.initParticle(this);\n    var sizeOptions = this.options.size,\n      sizeRange = sizeOptions.value;\n    this.size = {\n      enable: sizeOptions.animation.enable,\n      value: (0, NumberUtils_1.getValue)(sizeOptions) * container.retina.pixelRatio,\n      max: (0, NumberUtils_1.getRangeMax)(sizeRange) * pxRatio,\n      min: (0, NumberUtils_1.getRangeMin)(sizeRange) * pxRatio,\n      loops: 0,\n      maxLoops: (0, NumberUtils_1.getRangeValue)(sizeOptions.animation.count)\n    };\n    var sizeAnimation = sizeOptions.animation;\n    if (sizeAnimation.enable) {\n      this.size.status = 0;\n      switch (sizeAnimation.startValue) {\n        case \"min\":\n          this.size.value = this.size.min;\n          this.size.status = 0;\n          break;\n        case \"random\":\n          this.size.value = (0, NumberUtils_1.randomInRange)(this.size) * pxRatio;\n          this.size.status = Math.random() >= 0.5 ? 0 : 1;\n          break;\n        case \"max\":\n        default:\n          this.size.value = this.size.max;\n          this.size.status = 1;\n          break;\n      }\n      this.size.velocity = ((_g = this.retina.sizeAnimationSpeed) !== null && _g !== void 0 ? _g : container.retina.sizeAnimationSpeed) / 100 * container.retina.reduceFactor;\n      if (!sizeAnimation.sync) {\n        this.size.velocity *= Math.random();\n      }\n    }\n    this.direction = (0, NumberUtils_1.getParticleDirectionAngle)(this.options.move.direction);\n    this.bubble = {\n      inRange: false\n    };\n    this.initialVelocity = this.calculateVelocity();\n    this.velocity = this.initialVelocity.copy();\n    this.moveDecay = 1 - (0, NumberUtils_1.getRangeValue)(this.options.move.decay);\n    var gravityOptions = this.options.move.gravity;\n    this.gravity = {\n      enable: gravityOptions.enable,\n      acceleration: (0, NumberUtils_1.getRangeValue)(gravityOptions.acceleration),\n      inverse: gravityOptions.inverse\n    };\n    this.position = this.calcPosition(container, position, (0, NumberUtils_1.clamp)(zIndexValue, 0, container.zLayers));\n    this.initialPosition = this.position.copy();\n    this.offset = Vector_1.Vector.origin;\n    var particles = container.particles;\n    particles.needsSort = particles.needsSort || particles.lastZIndex < this.position.z;\n    particles.lastZIndex = this.position.z;\n    this.zIndexFactor = this.position.z / container.zLayers;\n    this.sides = 24;\n    var drawer = container.drawers.get(this.shape);\n    if (!drawer) {\n      drawer = __classPrivateFieldGet(this, _Particle_engine, \"f\").plugins.getShapeDrawer(this.shape);\n      if (drawer) {\n        container.drawers.set(this.shape, drawer);\n      }\n    }\n    if (drawer === null || drawer === void 0 ? void 0 : drawer.loadShape) {\n      drawer === null || drawer === void 0 ? void 0 : drawer.loadShape(this);\n    }\n    var sideCountFunc = drawer === null || drawer === void 0 ? void 0 : drawer.getSidesCount;\n    if (sideCountFunc) {\n      this.sides = sideCountFunc(this);\n    }\n    this.life = this.loadLife();\n    this.spawning = this.life.delay > 0;\n    this.shadowColor = (0, ColorUtils_1.colorToRgb)(this.options.shadow.color);\n    var _iterator = _createForOfIteratorHelper(container.particles.updaters),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var updater = _step.value;\n        if (updater.init) {\n          updater.init(this);\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    if (drawer && drawer.particleInit) {\n      drawer.particleInit(container, this);\n    }\n    var _iterator2 = _createForOfIteratorHelper(container.plugins),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var _step2$value = _slicedToArray(_step2.value, 2),\n          plugin = _step2$value[1];\n        if (plugin.particleCreated) {\n          plugin.particleCreated(this);\n        }\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n  }\n  _createClass(Particle, [{\n    key: \"isVisible\",\n    value: function isVisible() {\n      return !this.destroyed && !this.spawning && this.isInsideCanvas();\n    }\n  }, {\n    key: \"isInsideCanvas\",\n    value: function isInsideCanvas() {\n      var radius = this.getRadius(),\n        canvasSize = this.container.canvas.size;\n      return this.position.x >= -radius && this.position.y >= -radius && this.position.y <= canvasSize.height + radius && this.position.x <= canvasSize.width + radius;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(delta) {\n      var container = this.container;\n      var _iterator3 = _createForOfIteratorHelper(container.plugins),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var _step3$value = _slicedToArray(_step3.value, 2),\n            plugin = _step3$value[1];\n          container.canvas.drawParticlePlugin(plugin, this, delta);\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n      container.canvas.drawParticle(this, delta);\n    }\n  }, {\n    key: \"getPosition\",\n    value: function getPosition() {\n      return {\n        x: this.position.x + this.offset.x,\n        y: this.position.y + this.offset.y,\n        z: this.position.z\n      };\n    }\n  }, {\n    key: \"getRadius\",\n    value: function getRadius() {\n      var _a;\n      return (_a = this.bubble.radius) !== null && _a !== void 0 ? _a : this.size.value;\n    }\n  }, {\n    key: \"getMass\",\n    value: function getMass() {\n      return Math.pow(this.getRadius(), 2) * Math.PI / 2;\n    }\n  }, {\n    key: \"getFillColor\",\n    value: function getFillColor() {\n      var _a, _b;\n      var color = (_a = this.bubble.color) !== null && _a !== void 0 ? _a : (0, ColorUtils_1.getHslFromAnimation)(this.color);\n      if (color && this.roll && (this.backColor || this.roll.alter)) {\n        var backFactor = this.options.roll.mode === \"both\" ? 2 : 1,\n          backSum = this.options.roll.mode === \"horizontal\" ? Math.PI / 2 : 0,\n          rolled = Math.floor((((_b = this.roll.angle) !== null && _b !== void 0 ? _b : 0) + backSum) / (Math.PI / backFactor)) % 2;\n        if (rolled) {\n          if (this.backColor) {\n            return this.backColor;\n          }\n          if (this.roll.alter) {\n            return (0, CanvasUtils_1.alterHsl)(color, this.roll.alter.type, this.roll.alter.value);\n          }\n        }\n      }\n      return color;\n    }\n  }, {\n    key: \"getStrokeColor\",\n    value: function getStrokeColor() {\n      var _a, _b;\n      return (_b = (_a = this.bubble.color) !== null && _a !== void 0 ? _a : (0, ColorUtils_1.getHslFromAnimation)(this.strokeColor)) !== null && _b !== void 0 ? _b : this.getFillColor();\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy(override) {\n      this.destroyed = true;\n      this.bubble.inRange = false;\n      if (this.unbreakable) {\n        return;\n      }\n      this.destroyed = true;\n      this.bubble.inRange = false;\n      var _iterator4 = _createForOfIteratorHelper(this.container.plugins),\n        _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var _step4$value = _slicedToArray(_step4.value, 2),\n            plugin = _step4$value[1];\n          if (plugin.particleDestroyed) {\n            plugin.particleDestroyed(this, override);\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n      if (override) {\n        return;\n      }\n      var destroyOptions = this.options.destroy;\n      if (destroyOptions.mode === \"split\") {\n        this.split();\n      }\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      if (this.opacity) {\n        this.opacity.loops = 0;\n      }\n      this.size.loops = 0;\n    }\n  }, {\n    key: \"split\",\n    value: function split() {\n      var splitOptions = this.options.destroy.split;\n      if (splitOptions.count >= 0 && this.splitCount++ > splitOptions.count) {\n        return;\n      }\n      var rate = (0, NumberUtils_1.getRangeValue)(splitOptions.rate.value);\n      for (var i = 0; i < rate; i++) {\n        this.container.particles.addSplitParticle(this);\n      }\n    }\n  }, {\n    key: \"calcPosition\",\n    value: function calcPosition(container, position, zIndex) {\n      var tryCount = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n      var _a, _b, _c, _d;\n      var _iterator5 = _createForOfIteratorHelper(container.plugins),\n        _step5;\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var _step5$value = _slicedToArray(_step5.value, 2),\n            plugin = _step5$value[1];\n          var pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n          if (pluginPos !== undefined) {\n            return Vector3d_1.Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\n          }\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n      var canvasSize = container.canvas.size,\n        exactPosition = (0, NumberUtils_1.calcExactPositionOrRandomFromSize)({\n          size: canvasSize,\n          position: position\n        }),\n        pos = Vector3d_1.Vector3d.create(exactPosition.x, exactPosition.y, zIndex),\n        radius = this.getRadius(),\n        outModes = this.options.move.outModes,\n        fixHorizontal = function fixHorizontal(outMode) {\n          fixOutMode({\n            outMode: outMode,\n            checkModes: [\"bounce\", \"bounce-horizontal\"],\n            coord: pos.x,\n            maxCoord: container.canvas.size.width,\n            setCb: function setCb(value) {\n              return pos.x += value;\n            },\n            radius: radius\n          });\n        },\n        fixVertical = function fixVertical(outMode) {\n          fixOutMode({\n            outMode: outMode,\n            checkModes: [\"bounce\", \"bounce-vertical\"],\n            coord: pos.y,\n            maxCoord: container.canvas.size.height,\n            setCb: function setCb(value) {\n              return pos.y += value;\n            },\n            radius: radius\n          });\n        };\n      fixHorizontal((_a = outModes.left) !== null && _a !== void 0 ? _a : outModes.default);\n      fixHorizontal((_b = outModes.right) !== null && _b !== void 0 ? _b : outModes.default);\n      fixVertical((_c = outModes.top) !== null && _c !== void 0 ? _c : outModes.default);\n      fixVertical((_d = outModes.bottom) !== null && _d !== void 0 ? _d : outModes.default);\n      if (this.checkOverlap(pos, tryCount)) {\n        return this.calcPosition(container, undefined, zIndex, tryCount + 1);\n      }\n      return pos;\n    }\n  }, {\n    key: \"checkOverlap\",\n    value: function checkOverlap(pos) {\n      var tryCount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var collisionsOptions = this.options.collisions,\n        radius = this.getRadius();\n      if (!collisionsOptions.enable) {\n        return false;\n      }\n      var overlapOptions = collisionsOptions.overlap;\n      if (overlapOptions.enable) {\n        return false;\n      }\n      var retries = overlapOptions.retries;\n      if (retries >= 0 && tryCount > retries) {\n        throw new Error(\"Particle is overlapping and can't be placed\");\n      }\n      var overlaps = false;\n      var _iterator6 = _createForOfIteratorHelper(this.container.particles.array),\n        _step6;\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var particle = _step6.value;\n          if ((0, NumberUtils_1.getDistance)(pos, particle.position) < radius + particle.getRadius()) {\n            overlaps = true;\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n      return overlaps;\n    }\n  }, {\n    key: \"calculateVelocity\",\n    value: function calculateVelocity() {\n      var baseVelocity = (0, NumberUtils_1.getParticleBaseVelocity)(this.direction),\n        res = baseVelocity.copy(),\n        moveOptions = this.options.move,\n        rad = Math.PI / 180 * (0, NumberUtils_1.getRangeValue)(moveOptions.angle.value),\n        radOffset = Math.PI / 180 * (0, NumberUtils_1.getRangeValue)(moveOptions.angle.offset),\n        range = {\n          left: radOffset - rad / 2,\n          right: radOffset + rad / 2\n        };\n      if (!moveOptions.straight) {\n        res.angle += (0, NumberUtils_1.randomInRange)((0, NumberUtils_1.setRangeValue)(range.left, range.right));\n      }\n      if (moveOptions.random && typeof moveOptions.speed === \"number\") {\n        res.length *= Math.random();\n      }\n      return res;\n    }\n  }, {\n    key: \"loadShapeData\",\n    value: function loadShapeData(shapeOptions, reduceDuplicates) {\n      var shapeData = shapeOptions.options[this.shape];\n      if (shapeData) {\n        return (0, Utils_1.deepExtend)({}, shapeData instanceof Array ? (0, Utils_1.itemFromArray)(shapeData, this.id, reduceDuplicates) : shapeData);\n      }\n    }\n  }, {\n    key: \"loadLife\",\n    value: function loadLife() {\n      var container = this.container,\n        particlesOptions = this.options,\n        lifeOptions = particlesOptions.life,\n        life = {\n          delay: container.retina.reduceFactor ? (0, NumberUtils_1.getRangeValue)(lifeOptions.delay.value) * (lifeOptions.delay.sync ? 1 : Math.random()) / container.retina.reduceFactor * 1000 : 0,\n          delayTime: 0,\n          duration: container.retina.reduceFactor ? (0, NumberUtils_1.getRangeValue)(lifeOptions.duration.value) * (lifeOptions.duration.sync ? 1 : Math.random()) / container.retina.reduceFactor * 1000 : 0,\n          time: 0,\n          count: particlesOptions.life.count\n        };\n      if (life.duration <= 0) {\n        life.duration = -1;\n      }\n      if (life.count <= 0) {\n        life.count = -1;\n      }\n      return life;\n    }\n  }]);\n  return Particle;\n}();\nexports.Particle = Particle;\n_Particle_engine = new WeakMap();","map":{"version":3,"names":["_slicedToArray","require","default","_createForOfIteratorHelper","_classCallCheck","_createClass","__classPrivateFieldSet","receiver","state","value","kind","f","TypeError","has","call","set","__classPrivateFieldGet","get","_Particle_engine","Object","defineProperty","exports","Particle","NumberUtils_1","ColorUtils_1","Utils_1","ParticlesOptions_1","Shape_1","Vector_1","Vector3d_1","CanvasUtils_1","fixOutMode","data","isInArray","outMode","checkModes","coord","maxCoord","radius","setCb","engine","id","container","position","overrideOptions","group","_a","_b","_c","_d","_e","_f","_g","fill","close","lastPathTime","destroyed","unbreakable","splitCount","misplaced","retina","maxDistance","ignoresResizeRatio","pxRatio","pixelRatio","mainOptions","actualOptions","particlesOptions","ParticlesOptions","load","particles","shapeType","shape","type","reduceDuplicates","Array","itemFromArray","overrideShapeType","shapeOptions","Shape","shapeData","loadShapeData","undefined","options","pathDelay","getValue","move","path","delay","zIndexValue","getRangeValue","zIndex","initParticle","sizeOptions","size","sizeRange","enable","animation","max","getRangeMax","min","getRangeMin","loops","maxLoops","count","sizeAnimation","status","startValue","randomInRange","Math","random","velocity","sizeAnimationSpeed","reduceFactor","sync","direction","getParticleDirectionAngle","bubble","inRange","initialVelocity","calculateVelocity","copy","moveDecay","decay","gravityOptions","gravity","acceleration","inverse","calcPosition","clamp","zLayers","initialPosition","offset","Vector","origin","needsSort","lastZIndex","z","zIndexFactor","sides","drawer","drawers","plugins","getShapeDrawer","loadShape","sideCountFunc","getSidesCount","life","loadLife","spawning","shadowColor","colorToRgb","shadow","color","_iterator","updaters","_step","s","n","done","updater","init","err","e","particleInit","_iterator2","_step2","_step2$value","plugin","particleCreated","key","isVisible","isInsideCanvas","getRadius","canvasSize","canvas","x","y","height","width","draw","delta","_iterator3","_step3","_step3$value","drawParticlePlugin","drawParticle","getPosition","getMass","pow","PI","getFillColor","getHslFromAnimation","roll","backColor","alter","backFactor","mode","backSum","rolled","floor","angle","alterHsl","getStrokeColor","strokeColor","destroy","override","_iterator4","_step4","_step4$value","particleDestroyed","destroyOptions","split","reset","opacity","splitOptions","rate","i","addSplitParticle","tryCount","arguments","length","_iterator5","_step5","_step5$value","pluginPos","particlePosition","Vector3d","create","exactPosition","calcExactPositionOrRandomFromSize","pos","outModes","fixHorizontal","fixVertical","left","right","top","bottom","checkOverlap","collisionsOptions","collisions","overlapOptions","overlap","retries","Error","overlaps","_iterator6","array","_step6","particle","getDistance","baseVelocity","getParticleBaseVelocity","res","moveOptions","rad","radOffset","range","straight","setRangeValue","speed","deepExtend","lifeOptions","delayTime","duration","time","WeakMap"],"sources":["/Users/yutika/Documents/YutikaPortfolio/node_modules/tsparticles/cjs/Core/Particle.js"],"sourcesContent":["\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Particle_engine;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Particle = void 0;\nconst NumberUtils_1 = require(\"../Utils/NumberUtils\");\nconst ColorUtils_1 = require(\"../Utils/ColorUtils\");\nconst Utils_1 = require(\"../Utils/Utils\");\nconst ParticlesOptions_1 = require(\"../Options/Classes/Particles/ParticlesOptions\");\nconst Shape_1 = require(\"../Options/Classes/Particles/Shape/Shape\");\nconst Vector_1 = require(\"./Utils/Vector\");\nconst Vector3d_1 = require(\"./Utils/Vector3d\");\nconst CanvasUtils_1 = require(\"../Utils/CanvasUtils\");\nconst fixOutMode = (data) => {\n    if (!((0, Utils_1.isInArray)(data.outMode, data.checkModes) || (0, Utils_1.isInArray)(data.outMode, data.checkModes))) {\n        return;\n    }\n    if (data.coord > data.maxCoord - data.radius * 2) {\n        data.setCb(-data.radius);\n    }\n    else if (data.coord < data.radius * 2) {\n        data.setCb(data.radius);\n    }\n};\nclass Particle {\n    constructor(engine, id, container, position, overrideOptions, group) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        this.id = id;\n        this.container = container;\n        this.group = group;\n        _Particle_engine.set(this, void 0);\n        __classPrivateFieldSet(this, _Particle_engine, engine, \"f\");\n        this.fill = true;\n        this.close = true;\n        this.lastPathTime = 0;\n        this.destroyed = false;\n        this.unbreakable = false;\n        this.splitCount = 0;\n        this.misplaced = false;\n        this.retina = {\n            maxDistance: {},\n        };\n        this.ignoresResizeRatio = true;\n        const pxRatio = container.retina.pixelRatio, mainOptions = container.actualOptions, particlesOptions = new ParticlesOptions_1.ParticlesOptions();\n        particlesOptions.load(mainOptions.particles);\n        const shapeType = particlesOptions.shape.type, reduceDuplicates = particlesOptions.reduceDuplicates;\n        this.shape = shapeType instanceof Array ? (0, Utils_1.itemFromArray)(shapeType, this.id, reduceDuplicates) : shapeType;\n        if (overrideOptions === null || overrideOptions === void 0 ? void 0 : overrideOptions.shape) {\n            if (overrideOptions.shape.type) {\n                const overrideShapeType = overrideOptions.shape.type;\n                this.shape =\n                    overrideShapeType instanceof Array\n                        ? (0, Utils_1.itemFromArray)(overrideShapeType, this.id, reduceDuplicates)\n                        : overrideShapeType;\n            }\n            const shapeOptions = new Shape_1.Shape();\n            shapeOptions.load(overrideOptions.shape);\n            if (this.shape) {\n                this.shapeData = this.loadShapeData(shapeOptions, reduceDuplicates);\n            }\n        }\n        else {\n            this.shapeData = this.loadShapeData(particlesOptions.shape, reduceDuplicates);\n        }\n        if (overrideOptions !== undefined) {\n            particlesOptions.load(overrideOptions);\n        }\n        if (((_a = this.shapeData) === null || _a === void 0 ? void 0 : _a.particles) !== undefined) {\n            particlesOptions.load((_b = this.shapeData) === null || _b === void 0 ? void 0 : _b.particles);\n        }\n        this.fill = (_d = (_c = this.shapeData) === null || _c === void 0 ? void 0 : _c.fill) !== null && _d !== void 0 ? _d : this.fill;\n        this.close = (_f = (_e = this.shapeData) === null || _e === void 0 ? void 0 : _e.close) !== null && _f !== void 0 ? _f : this.close;\n        this.options = particlesOptions;\n        this.pathDelay = (0, NumberUtils_1.getValue)(this.options.move.path.delay) * 1000;\n        const zIndexValue = (0, NumberUtils_1.getRangeValue)(this.options.zIndex.value);\n        container.retina.initParticle(this);\n        const sizeOptions = this.options.size, sizeRange = sizeOptions.value;\n        this.size = {\n            enable: sizeOptions.animation.enable,\n            value: (0, NumberUtils_1.getValue)(sizeOptions) * container.retina.pixelRatio,\n            max: (0, NumberUtils_1.getRangeMax)(sizeRange) * pxRatio,\n            min: (0, NumberUtils_1.getRangeMin)(sizeRange) * pxRatio,\n            loops: 0,\n            maxLoops: (0, NumberUtils_1.getRangeValue)(sizeOptions.animation.count),\n        };\n        const sizeAnimation = sizeOptions.animation;\n        if (sizeAnimation.enable) {\n            this.size.status = 0;\n            switch (sizeAnimation.startValue) {\n                case \"min\":\n                    this.size.value = this.size.min;\n                    this.size.status = 0;\n                    break;\n                case \"random\":\n                    this.size.value = (0, NumberUtils_1.randomInRange)(this.size) * pxRatio;\n                    this.size.status = Math.random() >= 0.5 ? 0 : 1;\n                    break;\n                case \"max\":\n                default:\n                    this.size.value = this.size.max;\n                    this.size.status = 1;\n                    break;\n            }\n            this.size.velocity =\n                (((_g = this.retina.sizeAnimationSpeed) !== null && _g !== void 0 ? _g : container.retina.sizeAnimationSpeed) / 100) *\n                    container.retina.reduceFactor;\n            if (!sizeAnimation.sync) {\n                this.size.velocity *= Math.random();\n            }\n        }\n        this.direction = (0, NumberUtils_1.getParticleDirectionAngle)(this.options.move.direction);\n        this.bubble = {\n            inRange: false,\n        };\n        this.initialVelocity = this.calculateVelocity();\n        this.velocity = this.initialVelocity.copy();\n        this.moveDecay = 1 - (0, NumberUtils_1.getRangeValue)(this.options.move.decay);\n        const gravityOptions = this.options.move.gravity;\n        this.gravity = {\n            enable: gravityOptions.enable,\n            acceleration: (0, NumberUtils_1.getRangeValue)(gravityOptions.acceleration),\n            inverse: gravityOptions.inverse,\n        };\n        this.position = this.calcPosition(container, position, (0, NumberUtils_1.clamp)(zIndexValue, 0, container.zLayers));\n        this.initialPosition = this.position.copy();\n        this.offset = Vector_1.Vector.origin;\n        const particles = container.particles;\n        particles.needsSort = particles.needsSort || particles.lastZIndex < this.position.z;\n        particles.lastZIndex = this.position.z;\n        this.zIndexFactor = this.position.z / container.zLayers;\n        this.sides = 24;\n        let drawer = container.drawers.get(this.shape);\n        if (!drawer) {\n            drawer = __classPrivateFieldGet(this, _Particle_engine, \"f\").plugins.getShapeDrawer(this.shape);\n            if (drawer) {\n                container.drawers.set(this.shape, drawer);\n            }\n        }\n        if (drawer === null || drawer === void 0 ? void 0 : drawer.loadShape) {\n            drawer === null || drawer === void 0 ? void 0 : drawer.loadShape(this);\n        }\n        const sideCountFunc = drawer === null || drawer === void 0 ? void 0 : drawer.getSidesCount;\n        if (sideCountFunc) {\n            this.sides = sideCountFunc(this);\n        }\n        this.life = this.loadLife();\n        this.spawning = this.life.delay > 0;\n        this.shadowColor = (0, ColorUtils_1.colorToRgb)(this.options.shadow.color);\n        for (const updater of container.particles.updaters) {\n            if (updater.init) {\n                updater.init(this);\n            }\n        }\n        if (drawer && drawer.particleInit) {\n            drawer.particleInit(container, this);\n        }\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particleCreated) {\n                plugin.particleCreated(this);\n            }\n        }\n    }\n    isVisible() {\n        return !this.destroyed && !this.spawning && this.isInsideCanvas();\n    }\n    isInsideCanvas() {\n        const radius = this.getRadius(), canvasSize = this.container.canvas.size;\n        return (this.position.x >= -radius &&\n            this.position.y >= -radius &&\n            this.position.y <= canvasSize.height + radius &&\n            this.position.x <= canvasSize.width + radius);\n    }\n    draw(delta) {\n        const container = this.container;\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawParticlePlugin(plugin, this, delta);\n        }\n        container.canvas.drawParticle(this, delta);\n    }\n    getPosition() {\n        return {\n            x: this.position.x + this.offset.x,\n            y: this.position.y + this.offset.y,\n            z: this.position.z,\n        };\n    }\n    getRadius() {\n        var _a;\n        return (_a = this.bubble.radius) !== null && _a !== void 0 ? _a : this.size.value;\n    }\n    getMass() {\n        return (this.getRadius() ** 2 * Math.PI) / 2;\n    }\n    getFillColor() {\n        var _a, _b;\n        const color = (_a = this.bubble.color) !== null && _a !== void 0 ? _a : (0, ColorUtils_1.getHslFromAnimation)(this.color);\n        if (color && this.roll && (this.backColor || this.roll.alter)) {\n            const backFactor = this.options.roll.mode === \"both\" ? 2 : 1, backSum = this.options.roll.mode === \"horizontal\" ? Math.PI / 2 : 0, rolled = Math.floor((((_b = this.roll.angle) !== null && _b !== void 0 ? _b : 0) + backSum) / (Math.PI / backFactor)) % 2;\n            if (rolled) {\n                if (this.backColor) {\n                    return this.backColor;\n                }\n                if (this.roll.alter) {\n                    return (0, CanvasUtils_1.alterHsl)(color, this.roll.alter.type, this.roll.alter.value);\n                }\n            }\n        }\n        return color;\n    }\n    getStrokeColor() {\n        var _a, _b;\n        return (_b = (_a = this.bubble.color) !== null && _a !== void 0 ? _a : (0, ColorUtils_1.getHslFromAnimation)(this.strokeColor)) !== null && _b !== void 0 ? _b : this.getFillColor();\n    }\n    destroy(override) {\n        this.destroyed = true;\n        this.bubble.inRange = false;\n        if (this.unbreakable) {\n            return;\n        }\n        this.destroyed = true;\n        this.bubble.inRange = false;\n        for (const [, plugin] of this.container.plugins) {\n            if (plugin.particleDestroyed) {\n                plugin.particleDestroyed(this, override);\n            }\n        }\n        if (override) {\n            return;\n        }\n        const destroyOptions = this.options.destroy;\n        if (destroyOptions.mode === \"split\") {\n            this.split();\n        }\n    }\n    reset() {\n        if (this.opacity) {\n            this.opacity.loops = 0;\n        }\n        this.size.loops = 0;\n    }\n    split() {\n        const splitOptions = this.options.destroy.split;\n        if (splitOptions.count >= 0 && this.splitCount++ > splitOptions.count) {\n            return;\n        }\n        const rate = (0, NumberUtils_1.getRangeValue)(splitOptions.rate.value);\n        for (let i = 0; i < rate; i++) {\n            this.container.particles.addSplitParticle(this);\n        }\n    }\n    calcPosition(container, position, zIndex, tryCount = 0) {\n        var _a, _b, _c, _d;\n        for (const [, plugin] of container.plugins) {\n            const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n            if (pluginPos !== undefined) {\n                return Vector3d_1.Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\n            }\n        }\n        const canvasSize = container.canvas.size, exactPosition = (0, NumberUtils_1.calcExactPositionOrRandomFromSize)({\n            size: canvasSize,\n            position: position,\n        }), pos = Vector3d_1.Vector3d.create(exactPosition.x, exactPosition.y, zIndex), radius = this.getRadius(), outModes = this.options.move.outModes, fixHorizontal = (outMode) => {\n            fixOutMode({\n                outMode,\n                checkModes: [\"bounce\", \"bounce-horizontal\"],\n                coord: pos.x,\n                maxCoord: container.canvas.size.width,\n                setCb: (value) => (pos.x += value),\n                radius,\n            });\n        }, fixVertical = (outMode) => {\n            fixOutMode({\n                outMode,\n                checkModes: [\"bounce\", \"bounce-vertical\"],\n                coord: pos.y,\n                maxCoord: container.canvas.size.height,\n                setCb: (value) => (pos.y += value),\n                radius,\n            });\n        };\n        fixHorizontal((_a = outModes.left) !== null && _a !== void 0 ? _a : outModes.default);\n        fixHorizontal((_b = outModes.right) !== null && _b !== void 0 ? _b : outModes.default);\n        fixVertical((_c = outModes.top) !== null && _c !== void 0 ? _c : outModes.default);\n        fixVertical((_d = outModes.bottom) !== null && _d !== void 0 ? _d : outModes.default);\n        if (this.checkOverlap(pos, tryCount)) {\n            return this.calcPosition(container, undefined, zIndex, tryCount + 1);\n        }\n        return pos;\n    }\n    checkOverlap(pos, tryCount = 0) {\n        const collisionsOptions = this.options.collisions, radius = this.getRadius();\n        if (!collisionsOptions.enable) {\n            return false;\n        }\n        const overlapOptions = collisionsOptions.overlap;\n        if (overlapOptions.enable) {\n            return false;\n        }\n        const retries = overlapOptions.retries;\n        if (retries >= 0 && tryCount > retries) {\n            throw new Error(\"Particle is overlapping and can't be placed\");\n        }\n        let overlaps = false;\n        for (const particle of this.container.particles.array) {\n            if ((0, NumberUtils_1.getDistance)(pos, particle.position) < radius + particle.getRadius()) {\n                overlaps = true;\n                break;\n            }\n        }\n        return overlaps;\n    }\n    calculateVelocity() {\n        const baseVelocity = (0, NumberUtils_1.getParticleBaseVelocity)(this.direction), res = baseVelocity.copy(), moveOptions = this.options.move, rad = (Math.PI / 180) * (0, NumberUtils_1.getRangeValue)(moveOptions.angle.value), radOffset = (Math.PI / 180) * (0, NumberUtils_1.getRangeValue)(moveOptions.angle.offset), range = {\n            left: radOffset - rad / 2,\n            right: radOffset + rad / 2,\n        };\n        if (!moveOptions.straight) {\n            res.angle += (0, NumberUtils_1.randomInRange)((0, NumberUtils_1.setRangeValue)(range.left, range.right));\n        }\n        if (moveOptions.random && typeof moveOptions.speed === \"number\") {\n            res.length *= Math.random();\n        }\n        return res;\n    }\n    loadShapeData(shapeOptions, reduceDuplicates) {\n        const shapeData = shapeOptions.options[this.shape];\n        if (shapeData) {\n            return (0, Utils_1.deepExtend)({}, shapeData instanceof Array ? (0, Utils_1.itemFromArray)(shapeData, this.id, reduceDuplicates) : shapeData);\n        }\n    }\n    loadLife() {\n        const container = this.container, particlesOptions = this.options, lifeOptions = particlesOptions.life, life = {\n            delay: container.retina.reduceFactor\n                ? (((0, NumberUtils_1.getRangeValue)(lifeOptions.delay.value) * (lifeOptions.delay.sync ? 1 : Math.random())) /\n                    container.retina.reduceFactor) *\n                    1000\n                : 0,\n            delayTime: 0,\n            duration: container.retina.reduceFactor\n                ? (((0, NumberUtils_1.getRangeValue)(lifeOptions.duration.value) * (lifeOptions.duration.sync ? 1 : Math.random())) /\n                    container.retina.reduceFactor) *\n                    1000\n                : 0,\n            time: 0,\n            count: particlesOptions.life.count,\n        };\n        if (life.duration <= 0) {\n            life.duration = -1;\n        }\n        if (life.count <= 0) {\n            life.count = -1;\n        }\n        return life;\n    }\n}\nexports.Particle = Particle;\n_Particle_engine = new WeakMap();\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}