{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/yutika/Documents/YutikaPortfolio/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/yutika/Documents/YutikaPortfolio/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RollUpdater = void 0;\nvar ColorUtils_1 = require(\"../../Utils/ColorUtils\");\nvar NumberUtils_1 = require(\"../../Utils/NumberUtils\");\nfunction updateRoll(particle, delta) {\n  var roll = particle.options.roll;\n  if (!particle.roll || !roll.enable) {\n    return;\n  }\n  var speed = particle.roll.speed * delta.factor;\n  var max = 2 * Math.PI;\n  particle.roll.angle += speed;\n  if (particle.roll.angle > max) {\n    particle.roll.angle -= max;\n  }\n}\nvar RollUpdater = /*#__PURE__*/function () {\n  function RollUpdater() {\n    _classCallCheck(this, RollUpdater);\n  }\n  _createClass(RollUpdater, [{\n    key: \"init\",\n    value: function init(particle) {\n      var rollOpt = particle.options.roll;\n      if (rollOpt.enable) {\n        particle.roll = {\n          angle: Math.random() * Math.PI * 2,\n          speed: (0, NumberUtils_1.getRangeValue)(rollOpt.speed) / 360\n        };\n        if (rollOpt.backColor) {\n          particle.backColor = (0, ColorUtils_1.colorToHsl)(rollOpt.backColor);\n        } else if (rollOpt.darken.enable && rollOpt.enlighten.enable) {\n          var alterType = Math.random() >= 0.5 ? \"darken\" : \"enlighten\";\n          particle.roll.alter = {\n            type: alterType,\n            value: (0, NumberUtils_1.getRangeValue)(alterType === \"darken\" ? rollOpt.darken.value : rollOpt.enlighten.value)\n          };\n        } else if (rollOpt.darken.enable) {\n          particle.roll.alter = {\n            type: \"darken\",\n            value: (0, NumberUtils_1.getRangeValue)(rollOpt.darken.value)\n          };\n        } else if (rollOpt.enlighten.enable) {\n          particle.roll.alter = {\n            type: \"enlighten\",\n            value: (0, NumberUtils_1.getRangeValue)(rollOpt.enlighten.value)\n          };\n        }\n      } else {\n        particle.roll = {\n          angle: 0,\n          speed: 0\n        };\n      }\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled(particle) {\n      var roll = particle.options.roll;\n      return !particle.destroyed && !particle.spawning && roll.enable;\n    }\n  }, {\n    key: \"update\",\n    value: function update(particle, delta) {\n      if (!this.isEnabled(particle)) {\n        return;\n      }\n      updateRoll(particle, delta);\n    }\n  }]);\n  return RollUpdater;\n}();\nexports.RollUpdater = RollUpdater;","map":{"version":3,"names":["_classCallCheck","require","default","_createClass","Object","defineProperty","exports","value","RollUpdater","ColorUtils_1","NumberUtils_1","updateRoll","particle","delta","roll","options","enable","speed","factor","max","Math","PI","angle","key","init","rollOpt","random","getRangeValue","backColor","colorToHsl","darken","enlighten","alterType","alter","type","isEnabled","destroyed","spawning","update"],"sources":["/Users/yutika/Documents/YutikaPortfolio/node_modules/tsparticles/cjs/Updaters/Roll/RollUpdater.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RollUpdater = void 0;\nconst ColorUtils_1 = require(\"../../Utils/ColorUtils\");\nconst NumberUtils_1 = require(\"../../Utils/NumberUtils\");\nfunction updateRoll(particle, delta) {\n    const roll = particle.options.roll;\n    if (!particle.roll || !roll.enable) {\n        return;\n    }\n    const speed = particle.roll.speed * delta.factor;\n    const max = 2 * Math.PI;\n    particle.roll.angle += speed;\n    if (particle.roll.angle > max) {\n        particle.roll.angle -= max;\n    }\n}\nclass RollUpdater {\n    init(particle) {\n        const rollOpt = particle.options.roll;\n        if (rollOpt.enable) {\n            particle.roll = {\n                angle: Math.random() * Math.PI * 2,\n                speed: (0, NumberUtils_1.getRangeValue)(rollOpt.speed) / 360,\n            };\n            if (rollOpt.backColor) {\n                particle.backColor = (0, ColorUtils_1.colorToHsl)(rollOpt.backColor);\n            }\n            else if (rollOpt.darken.enable && rollOpt.enlighten.enable) {\n                const alterType = Math.random() >= 0.5 ? \"darken\" : \"enlighten\";\n                particle.roll.alter = {\n                    type: alterType,\n                    value: (0, NumberUtils_1.getRangeValue)(alterType === \"darken\" ? rollOpt.darken.value : rollOpt.enlighten.value),\n                };\n            }\n            else if (rollOpt.darken.enable) {\n                particle.roll.alter = {\n                    type: \"darken\",\n                    value: (0, NumberUtils_1.getRangeValue)(rollOpt.darken.value),\n                };\n            }\n            else if (rollOpt.enlighten.enable) {\n                particle.roll.alter = {\n                    type: \"enlighten\",\n                    value: (0, NumberUtils_1.getRangeValue)(rollOpt.enlighten.value),\n                };\n            }\n        }\n        else {\n            particle.roll = { angle: 0, speed: 0 };\n        }\n    }\n    isEnabled(particle) {\n        const roll = particle.options.roll;\n        return !particle.destroyed && !particle.spawning && roll.enable;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateRoll(particle, delta);\n    }\n}\nexports.RollUpdater = RollUpdater;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}