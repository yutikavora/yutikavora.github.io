{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/yutika/Documents/YutikaPortfolio/node_modules/@babel/runtime/regenerator/index.js\");\nvar _asyncToGenerator = require(\"/Users/yutika/Documents/YutikaPortfolio/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _slicedToArray = require(\"/Users/yutika/Documents/YutikaPortfolio/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\nvar _createForOfIteratorHelper = require(\"/Users/yutika/Documents/YutikaPortfolio/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _classCallCheck = require(\"/Users/yutika/Documents/YutikaPortfolio/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/yutika/Documents/YutikaPortfolio/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Particles_engine;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Particles = void 0;\nvar NumberUtils_1 = require(\"../Utils/NumberUtils\");\nvar InteractionManager_1 = require(\"./Utils/InteractionManager\");\nvar Particle_1 = require(\"./Particle\");\nvar ParticlesOptions_1 = require(\"../Options/Classes/Particles/ParticlesOptions\");\nvar Point_1 = require(\"./Utils/Point\");\nvar QuadTree_1 = require(\"./Utils/QuadTree\");\nvar Rectangle_1 = require(\"./Utils/Rectangle\");\nvar Particles = /*#__PURE__*/function () {\n  function Particles(engine, container) {\n    _classCallCheck(this, Particles);\n    this.container = container;\n    _Particles_engine.set(this, void 0);\n    __classPrivateFieldSet(this, _Particles_engine, engine, \"f\");\n    this.nextId = 0;\n    this.array = [];\n    this.zArray = [];\n    this.limit = 0;\n    this.needsSort = false;\n    this.lastZIndex = 0;\n    this.freqs = {\n      links: new Map(),\n      triangles: new Map()\n    };\n    this.interactionManager = new InteractionManager_1.InteractionManager(__classPrivateFieldGet(this, _Particles_engine, \"f\"), container);\n    var canvasSize = this.container.canvas.size;\n    this.linksColors = new Map();\n    this.quadTree = new QuadTree_1.QuadTree(new Rectangle_1.Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, canvasSize.width * 3 / 2, canvasSize.height * 3 / 2), 4);\n    this.movers = __classPrivateFieldGet(this, _Particles_engine, \"f\").plugins.getMovers(container, true);\n    this.updaters = __classPrivateFieldGet(this, _Particles_engine, \"f\").plugins.getUpdaters(container, true);\n  }\n  _createClass(Particles, [{\n    key: \"count\",\n    get: function get() {\n      return this.array.length;\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      var _a;\n      var container = this.container,\n        options = container.actualOptions;\n      this.lastZIndex = 0;\n      this.needsSort = false;\n      this.freqs.links = new Map();\n      this.freqs.triangles = new Map();\n      var handled = false;\n      this.updaters = __classPrivateFieldGet(this, _Particles_engine, \"f\").plugins.getUpdaters(container, true);\n      this.interactionManager.init();\n      var _iterator = _createForOfIteratorHelper(container.plugins),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _step$value = _slicedToArray(_step.value, 2),\n            plugin = _step$value[1];\n          if (plugin.particlesInitialization !== undefined) {\n            handled = plugin.particlesInitialization();\n          }\n          if (handled) {\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      this.addManualParticles();\n      if (!handled) {\n        for (var group in options.particles.groups) {\n          var groupOptions = options.particles.groups[group];\n          for (var i = this.count, j = 0; j < ((_a = groupOptions.number) === null || _a === void 0 ? void 0 : _a.value) && i < options.particles.number.value; i++, j++) {\n            this.addParticle(undefined, groupOptions, group);\n          }\n        }\n        for (var _i = this.count; _i < options.particles.number.value; _i++) {\n          this.addParticle();\n        }\n      }\n      container.pathGenerator.init(container);\n    }\n  }, {\n    key: \"redraw\",\n    value: function () {\n      var _redraw = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.clear();\n                this.init();\n                _context.next = 4;\n                return this.draw({\n                  value: 0,\n                  factor: 0\n                });\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function redraw() {\n        return _redraw.apply(this, arguments);\n      }\n      return redraw;\n    }()\n  }, {\n    key: \"removeAt\",\n    value: function removeAt(index) {\n      var quantity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      var group = arguments.length > 2 ? arguments[2] : undefined;\n      var override = arguments.length > 3 ? arguments[3] : undefined;\n      if (!(index >= 0 && index <= this.count)) {\n        return;\n      }\n      var deleted = 0;\n      for (var i = index; deleted < quantity && i < this.count; i++) {\n        var particle = this.array[i];\n        if (!particle || particle.group !== group) {\n          continue;\n        }\n        particle.destroy(override);\n        this.array.splice(i--, 1);\n        var zIdx = this.zArray.indexOf(particle);\n        this.zArray.splice(zIdx, 1);\n        deleted++;\n      }\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(particle, group, override) {\n      this.removeAt(this.array.indexOf(particle), undefined, group, override);\n    }\n  }, {\n    key: \"update\",\n    value: function () {\n      var _update = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(delta) {\n        var container, particlesToDelete, _iterator2, _step2, _step2$value, plugin, _iterator3, _step3, _particle, resizeFactor, _iterator5, _step5, _step5$value, _plugin, _iterator6, _step6, mover, _i2, _particlesToDelete, particle, _iterator4, _step4, _particle2, _iterator7, _step7, updater;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                container = this.container, particlesToDelete = [];\n                container.pathGenerator.update();\n                _iterator2 = _createForOfIteratorHelper(container.plugins);\n                try {\n                  for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                    _step2$value = _slicedToArray(_step2.value, 2), plugin = _step2$value[1];\n                    if (plugin.update !== undefined) {\n                      plugin.update(delta);\n                    }\n                  }\n                } catch (err) {\n                  _iterator2.e(err);\n                } finally {\n                  _iterator2.f();\n                }\n                _iterator3 = _createForOfIteratorHelper(this.array);\n                _context2.prev = 5;\n                _iterator3.s();\n              case 7:\n                if ((_step3 = _iterator3.n()).done) {\n                  _context2.next = 39;\n                  break;\n                }\n                _particle = _step3.value;\n                resizeFactor = container.canvas.resizeFactor;\n                if (resizeFactor && !_particle.ignoresResizeRatio) {\n                  _particle.position.x *= resizeFactor.width;\n                  _particle.position.y *= resizeFactor.height;\n                }\n                _particle.ignoresResizeRatio = false;\n                _particle.bubble.inRange = false;\n                _iterator5 = _createForOfIteratorHelper(this.container.plugins);\n                _context2.prev = 14;\n                _iterator5.s();\n              case 16:\n                if ((_step5 = _iterator5.n()).done) {\n                  _context2.next = 23;\n                  break;\n                }\n                _step5$value = _slicedToArray(_step5.value, 2), _plugin = _step5$value[1];\n                if (!_particle.destroyed) {\n                  _context2.next = 20;\n                  break;\n                }\n                return _context2.abrupt(\"break\", 23);\n              case 20:\n                if (_plugin.particleUpdate) {\n                  _plugin.particleUpdate(_particle, delta);\n                }\n              case 21:\n                _context2.next = 16;\n                break;\n              case 23:\n                _context2.next = 28;\n                break;\n              case 25:\n                _context2.prev = 25;\n                _context2.t0 = _context2[\"catch\"](14);\n                _iterator5.e(_context2.t0);\n              case 28:\n                _context2.prev = 28;\n                _iterator5.f();\n                return _context2.finish(28);\n              case 31:\n                _iterator6 = _createForOfIteratorHelper(this.movers);\n                try {\n                  for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n                    mover = _step6.value;\n                    if (mover.isEnabled(_particle)) {\n                      mover.move(_particle, delta);\n                    }\n                  }\n                } catch (err) {\n                  _iterator6.e(err);\n                } finally {\n                  _iterator6.f();\n                }\n                if (!_particle.destroyed) {\n                  _context2.next = 36;\n                  break;\n                }\n                particlesToDelete.push(_particle);\n                return _context2.abrupt(\"continue\", 37);\n              case 36:\n                this.quadTree.insert(new Point_1.Point(_particle.getPosition(), _particle));\n              case 37:\n                _context2.next = 7;\n                break;\n              case 39:\n                _context2.next = 44;\n                break;\n              case 41:\n                _context2.prev = 41;\n                _context2.t1 = _context2[\"catch\"](5);\n                _iterator3.e(_context2.t1);\n              case 44:\n                _context2.prev = 44;\n                _iterator3.f();\n                return _context2.finish(44);\n              case 47:\n                for (_i2 = 0, _particlesToDelete = particlesToDelete; _i2 < _particlesToDelete.length; _i2++) {\n                  particle = _particlesToDelete[_i2];\n                  this.remove(particle);\n                }\n                _context2.next = 50;\n                return this.interactionManager.externalInteract(delta);\n              case 50:\n                _iterator4 = _createForOfIteratorHelper(container.particles.array);\n                _context2.prev = 51;\n                _iterator4.s();\n              case 53:\n                if ((_step4 = _iterator4.n()).done) {\n                  _context2.next = 62;\n                  break;\n                }\n                _particle2 = _step4.value;\n                _iterator7 = _createForOfIteratorHelper(this.updaters);\n                try {\n                  for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n                    updater = _step7.value;\n                    updater.update(_particle2, delta);\n                  }\n                } catch (err) {\n                  _iterator7.e(err);\n                } finally {\n                  _iterator7.f();\n                }\n                if (!(!_particle2.destroyed && !_particle2.spawning)) {\n                  _context2.next = 60;\n                  break;\n                }\n                _context2.next = 60;\n                return this.interactionManager.particlesInteract(_particle2, delta);\n              case 60:\n                _context2.next = 53;\n                break;\n              case 62:\n                _context2.next = 67;\n                break;\n              case 64:\n                _context2.prev = 64;\n                _context2.t2 = _context2[\"catch\"](51);\n                _iterator4.e(_context2.t2);\n              case 67:\n                _context2.prev = 67;\n                _iterator4.f();\n                return _context2.finish(67);\n              case 70:\n                delete container.canvas.resizeFactor;\n              case 71:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[5, 41, 44, 47], [14, 25, 28, 31], [51, 64, 67, 70]]);\n      }));\n      function update(_x) {\n        return _update.apply(this, arguments);\n      }\n      return update;\n    }()\n  }, {\n    key: \"draw\",\n    value: function () {\n      var _draw = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(delta) {\n        var container, canvasSize, _iterator8, _step8, _step8$value, plugin, _iterator9, _step9, p;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                container = this.container, canvasSize = this.container.canvas.size;\n                this.quadTree = new QuadTree_1.QuadTree(new Rectangle_1.Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, canvasSize.width * 3 / 2, canvasSize.height * 3 / 2), 4);\n                container.canvas.clear();\n                _context3.next = 5;\n                return this.update(delta);\n              case 5:\n                if (this.needsSort) {\n                  this.zArray.sort(function (a, b) {\n                    return b.position.z - a.position.z || a.id - b.id;\n                  });\n                  this.lastZIndex = this.zArray[this.zArray.length - 1].position.z;\n                  this.needsSort = false;\n                }\n                _iterator8 = _createForOfIteratorHelper(container.plugins);\n                try {\n                  for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n                    _step8$value = _slicedToArray(_step8.value, 2), plugin = _step8$value[1];\n                    container.canvas.drawPlugin(plugin, delta);\n                  }\n                } catch (err) {\n                  _iterator8.e(err);\n                } finally {\n                  _iterator8.f();\n                }\n                _iterator9 = _createForOfIteratorHelper(this.zArray);\n                try {\n                  for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n                    p = _step9.value;\n                    p.draw(delta);\n                  }\n                } catch (err) {\n                  _iterator9.e(err);\n                } finally {\n                  _iterator9.f();\n                }\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n      function draw(_x2) {\n        return _draw.apply(this, arguments);\n      }\n      return draw;\n    }()\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.array = [];\n      this.zArray = [];\n    }\n  }, {\n    key: \"push\",\n    value: function push(nb, mouse, overrideOptions, group) {\n      this.pushing = true;\n      for (var i = 0; i < nb; i++) {\n        this.addParticle(mouse === null || mouse === void 0 ? void 0 : mouse.position, overrideOptions, group);\n      }\n      this.pushing = false;\n    }\n  }, {\n    key: \"addParticle\",\n    value: function addParticle(position, overrideOptions, group) {\n      var container = this.container,\n        options = container.actualOptions,\n        limit = options.particles.number.limit * container.density;\n      if (limit > 0) {\n        var countToRemove = this.count + 1 - limit;\n        if (countToRemove > 0) {\n          this.removeQuantity(countToRemove);\n        }\n      }\n      return this.pushParticle(position, overrideOptions, group);\n    }\n  }, {\n    key: \"addSplitParticle\",\n    value: function addSplitParticle(parent) {\n      var splitOptions = parent.options.destroy.split,\n        options = new ParticlesOptions_1.ParticlesOptions();\n      options.load(parent.options);\n      var factor = (0, NumberUtils_1.getRangeValue)(splitOptions.factor.value);\n      options.color.load({\n        value: {\n          hsl: parent.getFillColor()\n        }\n      });\n      if (typeof options.size.value === \"number\") {\n        options.size.value /= factor;\n      } else {\n        options.size.value.min /= factor;\n        options.size.value.max /= factor;\n      }\n      options.load(splitOptions.particles);\n      var offset = splitOptions.sizeOffset ? (0, NumberUtils_1.setRangeValue)(-parent.size.value, parent.size.value) : 0,\n        position = {\n          x: parent.position.x + (0, NumberUtils_1.randomInRange)(offset),\n          y: parent.position.y + (0, NumberUtils_1.randomInRange)(offset)\n        };\n      return this.pushParticle(position, options, parent.group, function (particle) {\n        if (particle.size.value < 0.5) {\n          return false;\n        }\n        particle.velocity.length = (0, NumberUtils_1.randomInRange)((0, NumberUtils_1.setRangeValue)(parent.velocity.length, particle.velocity.length));\n        particle.splitCount = parent.splitCount + 1;\n        particle.unbreakable = true;\n        setTimeout(function () {\n          particle.unbreakable = false;\n        }, 500);\n        return true;\n      });\n    }\n  }, {\n    key: \"removeQuantity\",\n    value: function removeQuantity(quantity, group) {\n      this.removeAt(0, quantity, group);\n    }\n  }, {\n    key: \"getLinkFrequency\",\n    value: function getLinkFrequency(p1, p2) {\n      var range = (0, NumberUtils_1.setRangeValue)(p1.id, p2.id),\n        key = \"\".concat((0, NumberUtils_1.getRangeMin)(range), \"_\").concat((0, NumberUtils_1.getRangeMax)(range));\n      var res = this.freqs.links.get(key);\n      if (res === undefined) {\n        res = Math.random();\n        this.freqs.links.set(key, res);\n      }\n      return res;\n    }\n  }, {\n    key: \"getTriangleFrequency\",\n    value: function getTriangleFrequency(p1, p2, p3) {\n      var _ref = [p1.id, p2.id, p3.id],\n        id1 = _ref[0],\n        id2 = _ref[1],\n        id3 = _ref[2];\n      if (id1 > id2) {\n        var _ref2 = [id1, id2];\n        id2 = _ref2[0];\n        id1 = _ref2[1];\n      }\n      if (id2 > id3) {\n        var _ref3 = [id2, id3];\n        id3 = _ref3[0];\n        id2 = _ref3[1];\n      }\n      if (id1 > id3) {\n        var _ref4 = [id1, id3];\n        id3 = _ref4[0];\n        id1 = _ref4[1];\n      }\n      var key = \"\".concat(id1, \"_\").concat(id2, \"_\").concat(id3);\n      var res = this.freqs.triangles.get(key);\n      if (res === undefined) {\n        res = Math.random();\n        this.freqs.triangles.set(key, res);\n      }\n      return res;\n    }\n  }, {\n    key: \"addManualParticles\",\n    value: function addManualParticles() {\n      var container = this.container,\n        options = container.actualOptions;\n      var _iterator10 = _createForOfIteratorHelper(options.manualParticles),\n        _step10;\n      try {\n        for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n          var particle = _step10.value;\n          this.addParticle((0, NumberUtils_1.calcPositionFromSize)({\n            size: container.canvas.size,\n            position: particle.position\n          }), particle.options);\n        }\n      } catch (err) {\n        _iterator10.e(err);\n      } finally {\n        _iterator10.f();\n      }\n    }\n  }, {\n    key: \"setDensity\",\n    value: function setDensity() {\n      var options = this.container.actualOptions;\n      for (var group in options.particles.groups) {\n        this.applyDensity(options.particles.groups[group], 0, group);\n      }\n      this.applyDensity(options.particles, options.manualParticles.length);\n    }\n  }, {\n    key: \"handleClickMode\",\n    value: function handleClickMode(mode) {\n      this.interactionManager.handleClickMode(mode);\n    }\n  }, {\n    key: \"applyDensity\",\n    value: function applyDensity(options, manualCount, group) {\n      var _a;\n      if (!((_a = options.number.density) === null || _a === void 0 ? void 0 : _a.enable)) {\n        return;\n      }\n      var numberOptions = options.number,\n        densityFactor = this.initDensityFactor(numberOptions.density),\n        optParticlesNumber = numberOptions.value,\n        optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber,\n        particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount,\n        particlesCount = Math.min(this.count, this.array.filter(function (t) {\n          return t.group === group;\n        }).length);\n      this.limit = numberOptions.limit * densityFactor;\n      if (particlesCount < particlesNumber) {\n        this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n      } else if (particlesCount > particlesNumber) {\n        this.removeQuantity(particlesCount - particlesNumber, group);\n      }\n    }\n  }, {\n    key: \"initDensityFactor\",\n    value: function initDensityFactor(densityOptions) {\n      var container = this.container;\n      if (!container.canvas.element || !densityOptions.enable) {\n        return 1;\n      }\n      var canvas = container.canvas.element,\n        pxRatio = container.retina.pixelRatio;\n      return canvas.width * canvas.height / (densityOptions.factor * Math.pow(pxRatio, 2) * densityOptions.area);\n    }\n  }, {\n    key: \"pushParticle\",\n    value: function pushParticle(position, overrideOptions, group, initializer) {\n      try {\n        var particle = new Particle_1.Particle(__classPrivateFieldGet(this, _Particles_engine, \"f\"), this.nextId, this.container, position, overrideOptions, group);\n        var canAdd = true;\n        if (initializer) {\n          canAdd = initializer(particle);\n        }\n        if (!canAdd) {\n          return;\n        }\n        this.array.push(particle);\n        this.zArray.push(particle);\n        this.nextId++;\n        return particle;\n      } catch (e) {\n        console.warn(\"error adding particle: \".concat(e));\n        return;\n      }\n    }\n  }]);\n  return Particles;\n}();\nexports.Particles = Particles;\n_Particles_engine = new WeakMap();","map":{"version":3,"names":["_regeneratorRuntime","require","_asyncToGenerator","default","_slicedToArray","_createForOfIteratorHelper","_classCallCheck","_createClass","__classPrivateFieldSet","receiver","state","value","kind","f","TypeError","has","call","set","__classPrivateFieldGet","get","_Particles_engine","Object","defineProperty","exports","Particles","NumberUtils_1","InteractionManager_1","Particle_1","ParticlesOptions_1","Point_1","QuadTree_1","Rectangle_1","engine","container","nextId","array","zArray","limit","needsSort","lastZIndex","freqs","links","Map","triangles","interactionManager","InteractionManager","canvasSize","canvas","size","linksColors","quadTree","QuadTree","Rectangle","width","height","movers","plugins","getMovers","updaters","getUpdaters","key","length","init","_a","options","actualOptions","handled","_iterator","_step","s","n","done","_step$value","plugin","particlesInitialization","undefined","err","e","addManualParticles","group","particles","groups","groupOptions","i","count","j","number","addParticle","pathGenerator","_redraw","mark","_callee","wrap","_callee$","_context","prev","next","clear","draw","factor","stop","redraw","apply","arguments","removeAt","index","quantity","override","deleted","particle","destroy","splice","zIdx","indexOf","remove","_update","_callee2","delta","particlesToDelete","_iterator2","_step2","_step2$value","_iterator3","_step3","_particle","resizeFactor","_iterator5","_step5","_step5$value","_plugin","_iterator6","_step6","mover","_i2","_particlesToDelete","_iterator4","_step4","_particle2","_iterator7","_step7","updater","_callee2$","_context2","update","ignoresResizeRatio","position","x","y","bubble","inRange","destroyed","abrupt","particleUpdate","t0","finish","isEnabled","move","push","insert","Point","getPosition","t1","externalInteract","spawning","particlesInteract","t2","_x","_draw","_callee3","_iterator8","_step8","_step8$value","_iterator9","_step9","p","_callee3$","_context3","sort","a","b","z","id","drawPlugin","_x2","nb","mouse","overrideOptions","pushing","density","countToRemove","removeQuantity","pushParticle","addSplitParticle","parent","splitOptions","split","ParticlesOptions","load","getRangeValue","color","hsl","getFillColor","min","max","offset","sizeOffset","setRangeValue","randomInRange","velocity","splitCount","unbreakable","setTimeout","getLinkFrequency","p1","p2","range","concat","getRangeMin","getRangeMax","res","Math","random","getTriangleFrequency","p3","_ref","id1","id2","id3","_ref2","_ref3","_ref4","_iterator10","manualParticles","_step10","calcPositionFromSize","setDensity","applyDensity","handleClickMode","mode","manualCount","enable","numberOptions","densityFactor","initDensityFactor","optParticlesNumber","optParticlesLimit","particlesNumber","particlesCount","filter","t","abs","densityOptions","element","pxRatio","retina","pixelRatio","pow","area","initializer","Particle","canAdd","console","warn","WeakMap"],"sources":["/Users/yutika/Documents/YutikaPortfolio/node_modules/tsparticles/cjs/Core/Particles.js"],"sourcesContent":["\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Particles_engine;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Particles = void 0;\nconst NumberUtils_1 = require(\"../Utils/NumberUtils\");\nconst InteractionManager_1 = require(\"./Utils/InteractionManager\");\nconst Particle_1 = require(\"./Particle\");\nconst ParticlesOptions_1 = require(\"../Options/Classes/Particles/ParticlesOptions\");\nconst Point_1 = require(\"./Utils/Point\");\nconst QuadTree_1 = require(\"./Utils/QuadTree\");\nconst Rectangle_1 = require(\"./Utils/Rectangle\");\nclass Particles {\n    constructor(engine, container) {\n        this.container = container;\n        _Particles_engine.set(this, void 0);\n        __classPrivateFieldSet(this, _Particles_engine, engine, \"f\");\n        this.nextId = 0;\n        this.array = [];\n        this.zArray = [];\n        this.limit = 0;\n        this.needsSort = false;\n        this.lastZIndex = 0;\n        this.freqs = {\n            links: new Map(),\n            triangles: new Map(),\n        };\n        this.interactionManager = new InteractionManager_1.InteractionManager(__classPrivateFieldGet(this, _Particles_engine, \"f\"), container);\n        const canvasSize = this.container.canvas.size;\n        this.linksColors = new Map();\n        this.quadTree = new QuadTree_1.QuadTree(new Rectangle_1.Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2), 4);\n        this.movers = __classPrivateFieldGet(this, _Particles_engine, \"f\").plugins.getMovers(container, true);\n        this.updaters = __classPrivateFieldGet(this, _Particles_engine, \"f\").plugins.getUpdaters(container, true);\n    }\n    get count() {\n        return this.array.length;\n    }\n    init() {\n        var _a;\n        const container = this.container, options = container.actualOptions;\n        this.lastZIndex = 0;\n        this.needsSort = false;\n        this.freqs.links = new Map();\n        this.freqs.triangles = new Map();\n        let handled = false;\n        this.updaters = __classPrivateFieldGet(this, _Particles_engine, \"f\").plugins.getUpdaters(container, true);\n        this.interactionManager.init();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particlesInitialization !== undefined) {\n                handled = plugin.particlesInitialization();\n            }\n            if (handled) {\n                break;\n            }\n        }\n        this.addManualParticles();\n        if (!handled) {\n            for (const group in options.particles.groups) {\n                const groupOptions = options.particles.groups[group];\n                for (let i = this.count, j = 0; j < ((_a = groupOptions.number) === null || _a === void 0 ? void 0 : _a.value) && i < options.particles.number.value; i++, j++) {\n                    this.addParticle(undefined, groupOptions, group);\n                }\n            }\n            for (let i = this.count; i < options.particles.number.value; i++) {\n                this.addParticle();\n            }\n        }\n        container.pathGenerator.init(container);\n    }\n    async redraw() {\n        this.clear();\n        this.init();\n        await this.draw({ value: 0, factor: 0 });\n    }\n    removeAt(index, quantity = 1, group, override) {\n        if (!(index >= 0 && index <= this.count)) {\n            return;\n        }\n        let deleted = 0;\n        for (let i = index; deleted < quantity && i < this.count; i++) {\n            const particle = this.array[i];\n            if (!particle || particle.group !== group) {\n                continue;\n            }\n            particle.destroy(override);\n            this.array.splice(i--, 1);\n            const zIdx = this.zArray.indexOf(particle);\n            this.zArray.splice(zIdx, 1);\n            deleted++;\n        }\n    }\n    remove(particle, group, override) {\n        this.removeAt(this.array.indexOf(particle), undefined, group, override);\n    }\n    async update(delta) {\n        const container = this.container, particlesToDelete = [];\n        container.pathGenerator.update();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.update !== undefined) {\n                plugin.update(delta);\n            }\n        }\n        for (const particle of this.array) {\n            const resizeFactor = container.canvas.resizeFactor;\n            if (resizeFactor && !particle.ignoresResizeRatio) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n            }\n            particle.ignoresResizeRatio = false;\n            particle.bubble.inRange = false;\n            for (const [, plugin] of this.container.plugins) {\n                if (particle.destroyed) {\n                    break;\n                }\n                if (plugin.particleUpdate) {\n                    plugin.particleUpdate(particle, delta);\n                }\n            }\n            for (const mover of this.movers) {\n                if (mover.isEnabled(particle)) {\n                    mover.move(particle, delta);\n                }\n            }\n            if (particle.destroyed) {\n                particlesToDelete.push(particle);\n                continue;\n            }\n            this.quadTree.insert(new Point_1.Point(particle.getPosition(), particle));\n        }\n        for (const particle of particlesToDelete) {\n            this.remove(particle);\n        }\n        await this.interactionManager.externalInteract(delta);\n        for (const particle of container.particles.array) {\n            for (const updater of this.updaters) {\n                updater.update(particle, delta);\n            }\n            if (!particle.destroyed && !particle.spawning) {\n                await this.interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete container.canvas.resizeFactor;\n    }\n    async draw(delta) {\n        const container = this.container, canvasSize = this.container.canvas.size;\n        this.quadTree = new QuadTree_1.QuadTree(new Rectangle_1.Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2), 4);\n        container.canvas.clear();\n        await this.update(delta);\n        if (this.needsSort) {\n            this.zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n            this.lastZIndex = this.zArray[this.zArray.length - 1].position.z;\n            this.needsSort = false;\n        }\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this.zArray) {\n            p.draw(delta);\n        }\n    }\n    clear() {\n        this.array = [];\n        this.zArray = [];\n    }\n    push(nb, mouse, overrideOptions, group) {\n        this.pushing = true;\n        for (let i = 0; i < nb; i++) {\n            this.addParticle(mouse === null || mouse === void 0 ? void 0 : mouse.position, overrideOptions, group);\n        }\n        this.pushing = false;\n    }\n    addParticle(position, overrideOptions, group) {\n        const container = this.container, options = container.actualOptions, limit = options.particles.number.limit * container.density;\n        if (limit > 0) {\n            const countToRemove = this.count + 1 - limit;\n            if (countToRemove > 0) {\n                this.removeQuantity(countToRemove);\n            }\n        }\n        return this.pushParticle(position, overrideOptions, group);\n    }\n    addSplitParticle(parent) {\n        const splitOptions = parent.options.destroy.split, options = new ParticlesOptions_1.ParticlesOptions();\n        options.load(parent.options);\n        const factor = (0, NumberUtils_1.getRangeValue)(splitOptions.factor.value);\n        options.color.load({\n            value: {\n                hsl: parent.getFillColor(),\n            },\n        });\n        if (typeof options.size.value === \"number\") {\n            options.size.value /= factor;\n        }\n        else {\n            options.size.value.min /= factor;\n            options.size.value.max /= factor;\n        }\n        options.load(splitOptions.particles);\n        const offset = splitOptions.sizeOffset ? (0, NumberUtils_1.setRangeValue)(-parent.size.value, parent.size.value) : 0, position = {\n            x: parent.position.x + (0, NumberUtils_1.randomInRange)(offset),\n            y: parent.position.y + (0, NumberUtils_1.randomInRange)(offset),\n        };\n        return this.pushParticle(position, options, parent.group, (particle) => {\n            if (particle.size.value < 0.5) {\n                return false;\n            }\n            particle.velocity.length = (0, NumberUtils_1.randomInRange)((0, NumberUtils_1.setRangeValue)(parent.velocity.length, particle.velocity.length));\n            particle.splitCount = parent.splitCount + 1;\n            particle.unbreakable = true;\n            setTimeout(() => {\n                particle.unbreakable = false;\n            }, 500);\n            return true;\n        });\n    }\n    removeQuantity(quantity, group) {\n        this.removeAt(0, quantity, group);\n    }\n    getLinkFrequency(p1, p2) {\n        const range = (0, NumberUtils_1.setRangeValue)(p1.id, p2.id), key = `${(0, NumberUtils_1.getRangeMin)(range)}_${(0, NumberUtils_1.getRangeMax)(range)}`;\n        let res = this.freqs.links.get(key);\n        if (res === undefined) {\n            res = Math.random();\n            this.freqs.links.set(key, res);\n        }\n        return res;\n    }\n    getTriangleFrequency(p1, p2, p3) {\n        let [id1, id2, id3] = [p1.id, p2.id, p3.id];\n        if (id1 > id2) {\n            [id2, id1] = [id1, id2];\n        }\n        if (id2 > id3) {\n            [id3, id2] = [id2, id3];\n        }\n        if (id1 > id3) {\n            [id3, id1] = [id1, id3];\n        }\n        const key = `${id1}_${id2}_${id3}`;\n        let res = this.freqs.triangles.get(key);\n        if (res === undefined) {\n            res = Math.random();\n            this.freqs.triangles.set(key, res);\n        }\n        return res;\n    }\n    addManualParticles() {\n        const container = this.container, options = container.actualOptions;\n        for (const particle of options.manualParticles) {\n            this.addParticle((0, NumberUtils_1.calcPositionFromSize)({\n                size: container.canvas.size,\n                position: particle.position,\n            }), particle.options);\n        }\n    }\n    setDensity() {\n        const options = this.container.actualOptions;\n        for (const group in options.particles.groups) {\n            this.applyDensity(options.particles.groups[group], 0, group);\n        }\n        this.applyDensity(options.particles, options.manualParticles.length);\n    }\n    handleClickMode(mode) {\n        this.interactionManager.handleClickMode(mode);\n    }\n    applyDensity(options, manualCount, group) {\n        var _a;\n        if (!((_a = options.number.density) === null || _a === void 0 ? void 0 : _a.enable)) {\n            return;\n        }\n        const numberOptions = options.number, densityFactor = this.initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this.array.filter((t) => t.group === group).length);\n        this.limit = numberOptions.limit * densityFactor;\n        if (particlesCount < particlesNumber) {\n            this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n        }\n        else if (particlesCount > particlesNumber) {\n            this.removeQuantity(particlesCount - particlesNumber, group);\n        }\n    }\n    initDensityFactor(densityOptions) {\n        const container = this.container;\n        if (!container.canvas.element || !densityOptions.enable) {\n            return 1;\n        }\n        const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\n        return (canvas.width * canvas.height) / (densityOptions.factor * pxRatio ** 2 * densityOptions.area);\n    }\n    pushParticle(position, overrideOptions, group, initializer) {\n        try {\n            const particle = new Particle_1.Particle(__classPrivateFieldGet(this, _Particles_engine, \"f\"), this.nextId, this.container, position, overrideOptions, group);\n            let canAdd = true;\n            if (initializer) {\n                canAdd = initializer(particle);\n            }\n            if (!canAdd) {\n                return;\n            }\n            this.array.push(particle);\n            this.zArray.push(particle);\n            this.nextId++;\n            return particle;\n        }\n        catch (e) {\n            console.warn(`error adding particle: ${e}`);\n            return;\n        }\n    }\n}\nexports.Particles = Particles;\n_Particles_engine = new WeakMap();\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}