{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/yutika/Documents/YutikaPortfolio/node_modules/@babel/runtime/regenerator/index.js\");\nvar _slicedToArray = require(\"/Users/yutika/Documents/YutikaPortfolio/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\nvar _createForOfIteratorHelper = require(\"/Users/yutika/Documents/YutikaPortfolio/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _asyncToGenerator = require(\"/Users/yutika/Documents/YutikaPortfolio/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _classCallCheck = require(\"/Users/yutika/Documents/YutikaPortfolio/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/yutika/Documents/YutikaPortfolio/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Canvas = void 0;\nvar CanvasUtils_1 = require(\"../Utils/CanvasUtils\");\nvar ColorUtils_1 = require(\"../Utils/ColorUtils\");\nvar Constants_1 = require(\"./Utils/Constants\");\nvar Utils_1 = require(\"../Utils/Utils\");\nvar Canvas = /*#__PURE__*/function () {\n  function Canvas(container) {\n    _classCallCheck(this, Canvas);\n    this.container = container;\n    this.size = {\n      height: 0,\n      width: 0\n    };\n    this.context = null;\n    this.generatedCanvas = false;\n  }\n  _createClass(Canvas, [{\n    key: \"init\",\n    value: function init() {\n      this.resize();\n      this.initStyle();\n      this.initCover();\n      this.initTrail();\n      this.initBackground();\n      this.paint();\n    }\n  }, {\n    key: \"loadCanvas\",\n    value: function loadCanvas(canvas) {\n      var _a;\n      if (this.generatedCanvas) {\n        (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n      }\n      this.generatedCanvas = canvas.dataset && Constants_1.Constants.generatedAttribute in canvas.dataset ? canvas.dataset[Constants_1.Constants.generatedAttribute] === \"true\" : this.generatedCanvas;\n      this.element = canvas;\n      this.originalStyle = (0, Utils_1.deepExtend)({}, this.element.style);\n      this.size.height = canvas.offsetHeight;\n      this.size.width = canvas.offsetWidth;\n      this.context = this.element.getContext(\"2d\");\n      this.container.retina.init();\n      this.initBackground();\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _this = this;\n      var _a;\n      if (this.generatedCanvas) {\n        (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n      }\n      this.draw(function (ctx) {\n        (0, CanvasUtils_1.clear)(ctx, _this.size);\n      });\n    }\n  }, {\n    key: \"paint\",\n    value: function paint() {\n      var _this2 = this;\n      var options = this.container.actualOptions;\n      this.draw(function (ctx) {\n        if (options.backgroundMask.enable && options.backgroundMask.cover) {\n          (0, CanvasUtils_1.clear)(ctx, _this2.size);\n          _this2.paintBase(_this2.coverColorStyle);\n        } else {\n          _this2.paintBase();\n        }\n      });\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      var _this3 = this;\n      var options = this.container.actualOptions,\n        trail = options.particles.move.trail;\n      if (options.backgroundMask.enable) {\n        this.paint();\n      } else if (trail.enable && trail.length > 0 && this.trailFillColor) {\n        this.paintBase((0, ColorUtils_1.getStyleFromRgb)(this.trailFillColor, 1 / trail.length));\n      } else {\n        this.draw(function (ctx) {\n          (0, CanvasUtils_1.clear)(ctx, _this3.size);\n        });\n      }\n    }\n  }, {\n    key: \"windowResize\",\n    value: function () {\n      var _windowResize = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var container, needsRefresh, _iterator, _step, _step$value, plugin;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (this.element) {\n                  _context.next = 2;\n                  break;\n                }\n                return _context.abrupt(\"return\");\n              case 2:\n                this.resize();\n                container = this.container, needsRefresh = container.updateActualOptions();\n                container.particles.setDensity();\n                _iterator = _createForOfIteratorHelper(container.plugins);\n                try {\n                  for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                    _step$value = _slicedToArray(_step.value, 2), plugin = _step$value[1];\n                    if (plugin.resize !== undefined) {\n                      plugin.resize();\n                    }\n                  }\n                } catch (err) {\n                  _iterator.e(err);\n                } finally {\n                  _iterator.f();\n                }\n                if (!needsRefresh) {\n                  _context.next = 10;\n                  break;\n                }\n                _context.next = 10;\n                return container.refresh();\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function windowResize() {\n        return _windowResize.apply(this, arguments);\n      }\n      return windowResize;\n    }()\n  }, {\n    key: \"resize\",\n    value: function resize() {\n      if (!this.element) {\n        return;\n      }\n      var container = this.container,\n        pxRatio = container.retina.pixelRatio,\n        size = container.canvas.size,\n        newSize = {\n          width: this.element.offsetWidth * pxRatio,\n          height: this.element.offsetHeight * pxRatio\n        };\n      if (newSize.height === size.height && newSize.width === size.width && newSize.height === this.element.height && newSize.width === this.element.width) {\n        return;\n      }\n      var oldSize = Object.assign({}, size);\n      this.element.width = size.width = this.element.offsetWidth * pxRatio;\n      this.element.height = size.height = this.element.offsetHeight * pxRatio;\n      if (this.container.started) {\n        this.resizeFactor = {\n          width: size.width / oldSize.width,\n          height: size.height / oldSize.height\n        };\n      }\n    }\n  }, {\n    key: \"drawConnectLine\",\n    value: function drawConnectLine(p1, p2) {\n      var _this4 = this;\n      this.draw(function (ctx) {\n        var _a;\n        var lineStyle = _this4.lineStyle(p1, p2);\n        if (!lineStyle) {\n          return;\n        }\n        var pos1 = p1.getPosition(),\n          pos2 = p2.getPosition();\n        (0, CanvasUtils_1.drawConnectLine)(ctx, (_a = p1.retina.linksWidth) !== null && _a !== void 0 ? _a : _this4.container.retina.linksWidth, lineStyle, pos1, pos2);\n      });\n    }\n  }, {\n    key: \"drawGrabLine\",\n    value: function drawGrabLine(particle, lineColor, opacity, mousePos) {\n      var container = this.container;\n      this.draw(function (ctx) {\n        var _a;\n        var beginPos = particle.getPosition();\n        (0, CanvasUtils_1.drawGrabLine)(ctx, (_a = particle.retina.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth, beginPos, mousePos, lineColor, opacity);\n      });\n    }\n  }, {\n    key: \"drawParticle\",\n    value: function drawParticle(particle, delta) {\n      var _this5 = this;\n      var _a, _b, _c, _d, _e, _f;\n      if (particle.spawning || particle.destroyed) {\n        return;\n      }\n      var radius = particle.getRadius();\n      if (radius <= 0) {\n        return;\n      }\n      var pfColor = particle.getFillColor(),\n        psColor = (_a = particle.getStrokeColor()) !== null && _a !== void 0 ? _a : pfColor;\n      if (!pfColor && !psColor) {\n        return;\n      }\n      var _this$getPluginPartic = this.getPluginParticleColors(particle),\n        _this$getPluginPartic2 = _slicedToArray(_this$getPluginPartic, 2),\n        fColor = _this$getPluginPartic2[0],\n        sColor = _this$getPluginPartic2[1];\n      if (!fColor || !sColor) {\n        if (!fColor) {\n          fColor = pfColor ? pfColor : undefined;\n        }\n        if (!sColor) {\n          sColor = psColor ? psColor : undefined;\n        }\n      }\n      var options = this.container.actualOptions,\n        zIndexOptions = particle.options.zIndex,\n        zOpacityFactor = Math.pow(1 - particle.zIndexFactor, zIndexOptions.opacityRate),\n        opacity = (_d = (_b = particle.bubble.opacity) !== null && _b !== void 0 ? _b : (_c = particle.opacity) === null || _c === void 0 ? void 0 : _c.value) !== null && _d !== void 0 ? _d : 1,\n        strokeOpacity = (_f = (_e = particle.stroke) === null || _e === void 0 ? void 0 : _e.opacity) !== null && _f !== void 0 ? _f : opacity,\n        zOpacity = opacity * zOpacityFactor,\n        zStrokeOpacity = strokeOpacity * zOpacityFactor;\n      var colorStyles = {\n        fill: fColor ? (0, ColorUtils_1.getStyleFromHsl)(fColor, zOpacity) : undefined\n      };\n      colorStyles.stroke = sColor ? (0, ColorUtils_1.getStyleFromHsl)(sColor, zStrokeOpacity) : colorStyles.fill;\n      this.draw(function (ctx) {\n        var zSizeFactor = Math.pow(1 - particle.zIndexFactor, zIndexOptions.sizeRate),\n          container = _this5.container;\n        var _iterator2 = _createForOfIteratorHelper(container.particles.updaters),\n          _step2;\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var updater = _step2.value;\n            if (updater.beforeDraw) {\n              updater.beforeDraw(particle);\n            }\n            if (updater.getColorStyles) {\n              var _updater$getColorStyl = updater.getColorStyles(particle, ctx, radius, zOpacity),\n                fill = _updater$getColorStyl.fill,\n                stroke = _updater$getColorStyl.stroke;\n              if (fill) {\n                colorStyles.fill = fill;\n              }\n              if (stroke) {\n                colorStyles.stroke = stroke;\n              }\n            }\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n        (0, CanvasUtils_1.drawParticle)(container, ctx, particle, delta, colorStyles, options.backgroundMask.enable, options.backgroundMask.composite, radius * zSizeFactor, zOpacity, particle.options.shadow);\n        var _iterator3 = _createForOfIteratorHelper(container.particles.updaters),\n          _step3;\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var _updater = _step3.value;\n            if (_updater.afterDraw) {\n              _updater.afterDraw(particle);\n            }\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n      });\n    }\n  }, {\n    key: \"drawPlugin\",\n    value: function drawPlugin(plugin, delta) {\n      this.draw(function (ctx) {\n        (0, CanvasUtils_1.drawPlugin)(ctx, plugin, delta);\n      });\n    }\n  }, {\n    key: \"drawParticlePlugin\",\n    value: function drawParticlePlugin(plugin, particle, delta) {\n      this.draw(function (ctx) {\n        (0, CanvasUtils_1.drawParticlePlugin)(ctx, plugin, particle, delta);\n      });\n    }\n  }, {\n    key: \"initBackground\",\n    value: function initBackground() {\n      var options = this.container.actualOptions,\n        background = options.background,\n        element = this.element,\n        elementStyle = element === null || element === void 0 ? void 0 : element.style;\n      if (!elementStyle) {\n        return;\n      }\n      if (background.color) {\n        var color = (0, ColorUtils_1.colorToRgb)(background.color);\n        elementStyle.backgroundColor = color ? (0, ColorUtils_1.getStyleFromRgb)(color, background.opacity) : \"\";\n      } else {\n        elementStyle.backgroundColor = \"\";\n      }\n      elementStyle.backgroundImage = background.image || \"\";\n      elementStyle.backgroundPosition = background.position || \"\";\n      elementStyle.backgroundRepeat = background.repeat || \"\";\n      elementStyle.backgroundSize = background.size || \"\";\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(cb) {\n      if (!this.context) {\n        return;\n      }\n      return cb(this.context);\n    }\n  }, {\n    key: \"initCover\",\n    value: function initCover() {\n      var options = this.container.actualOptions,\n        cover = options.backgroundMask.cover,\n        color = cover.color,\n        coverRgb = (0, ColorUtils_1.colorToRgb)(color);\n      if (coverRgb) {\n        var coverColor = {\n          r: coverRgb.r,\n          g: coverRgb.g,\n          b: coverRgb.b,\n          a: cover.opacity\n        };\n        this.coverColorStyle = (0, ColorUtils_1.getStyleFromRgb)(coverColor, coverColor.a);\n      }\n    }\n  }, {\n    key: \"initTrail\",\n    value: function initTrail() {\n      var options = this.container.actualOptions,\n        trail = options.particles.move.trail,\n        fillColor = (0, ColorUtils_1.colorToRgb)(trail.fillColor);\n      if (fillColor) {\n        var _trail = options.particles.move.trail;\n        this.trailFillColor = {\n          r: fillColor.r,\n          g: fillColor.g,\n          b: fillColor.b,\n          a: 1 / _trail.length\n        };\n      }\n    }\n  }, {\n    key: \"getPluginParticleColors\",\n    value: function getPluginParticleColors(particle) {\n      var fColor, sColor;\n      var _iterator4 = _createForOfIteratorHelper(this.container.plugins),\n        _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var _step4$value = _slicedToArray(_step4.value, 2),\n            plugin = _step4$value[1];\n          if (!fColor && plugin.particleFillColor) {\n            fColor = (0, ColorUtils_1.colorToHsl)(plugin.particleFillColor(particle));\n          }\n          if (!sColor && plugin.particleStrokeColor) {\n            sColor = (0, ColorUtils_1.colorToHsl)(plugin.particleStrokeColor(particle));\n          }\n          if (fColor && sColor) {\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n      return [fColor, sColor];\n    }\n  }, {\n    key: \"initStyle\",\n    value: function initStyle() {\n      var element = this.element,\n        options = this.container.actualOptions;\n      if (!element) {\n        return;\n      }\n      var originalStyle = this.originalStyle;\n      if (options.fullScreen.enable) {\n        this.originalStyle = (0, Utils_1.deepExtend)({}, element.style);\n        element.style.setProperty(\"position\", \"fixed\", \"important\");\n        element.style.setProperty(\"z-index\", options.fullScreen.zIndex.toString(10), \"important\");\n        element.style.setProperty(\"top\", \"0\", \"important\");\n        element.style.setProperty(\"left\", \"0\", \"important\");\n        element.style.setProperty(\"width\", \"100%\", \"important\");\n        element.style.setProperty(\"height\", \"100%\", \"important\");\n      } else if (originalStyle) {\n        element.style.position = originalStyle.position;\n        element.style.zIndex = originalStyle.zIndex;\n        element.style.top = originalStyle.top;\n        element.style.left = originalStyle.left;\n        element.style.width = originalStyle.width;\n        element.style.height = originalStyle.height;\n      }\n      for (var key in options.style) {\n        if (!key || !options.style) {\n          continue;\n        }\n        var value = options.style[key];\n        if (!value) {\n          continue;\n        }\n        element.style.setProperty(key, value, \"important\");\n      }\n    }\n  }, {\n    key: \"paintBase\",\n    value: function paintBase(baseColor) {\n      var _this6 = this;\n      this.draw(function (ctx) {\n        (0, CanvasUtils_1.paintBase)(ctx, _this6.size, baseColor);\n      });\n    }\n  }, {\n    key: \"lineStyle\",\n    value: function lineStyle(p1, p2) {\n      var _this7 = this;\n      return this.draw(function (ctx) {\n        var options = _this7.container.actualOptions,\n          connectOptions = options.interactivity.modes.connect;\n        return (0, CanvasUtils_1.gradient)(ctx, p1, p2, connectOptions.links.opacity);\n      });\n    }\n  }]);\n  return Canvas;\n}();\nexports.Canvas = Canvas;","map":{"version":3,"names":["_regeneratorRuntime","require","_slicedToArray","default","_createForOfIteratorHelper","_asyncToGenerator","_classCallCheck","_createClass","Object","defineProperty","exports","value","Canvas","CanvasUtils_1","ColorUtils_1","Constants_1","Utils_1","container","size","height","width","context","generatedCanvas","key","init","resize","initStyle","initCover","initTrail","initBackground","paint","loadCanvas","canvas","_a","element","remove","dataset","Constants","generatedAttribute","originalStyle","deepExtend","style","offsetHeight","offsetWidth","getContext","retina","destroy","_this","draw","ctx","clear","_this2","options","actualOptions","backgroundMask","enable","cover","paintBase","coverColorStyle","_this3","trail","particles","move","length","trailFillColor","getStyleFromRgb","_windowResize","mark","_callee","needsRefresh","_iterator","_step","_step$value","plugin","wrap","_callee$","_context","prev","next","abrupt","updateActualOptions","setDensity","plugins","s","n","done","undefined","err","e","f","refresh","stop","windowResize","apply","arguments","pxRatio","pixelRatio","newSize","oldSize","assign","started","resizeFactor","drawConnectLine","p1","p2","_this4","lineStyle","pos1","getPosition","pos2","linksWidth","drawGrabLine","particle","lineColor","opacity","mousePos","beginPos","drawParticle","delta","_this5","_b","_c","_d","_e","_f","spawning","destroyed","radius","getRadius","pfColor","getFillColor","psColor","getStrokeColor","_this$getPluginPartic","getPluginParticleColors","_this$getPluginPartic2","fColor","sColor","zIndexOptions","zIndex","zOpacityFactor","Math","pow","zIndexFactor","opacityRate","bubble","strokeOpacity","stroke","zOpacity","zStrokeOpacity","colorStyles","fill","getStyleFromHsl","zSizeFactor","sizeRate","_iterator2","updaters","_step2","updater","beforeDraw","getColorStyles","_updater$getColorStyl","composite","shadow","_iterator3","_step3","afterDraw","drawPlugin","drawParticlePlugin","background","elementStyle","color","colorToRgb","backgroundColor","backgroundImage","image","backgroundPosition","position","backgroundRepeat","repeat","backgroundSize","cb","coverRgb","coverColor","r","g","b","a","fillColor","_iterator4","_step4","_step4$value","particleFillColor","colorToHsl","particleStrokeColor","fullScreen","setProperty","toString","top","left","baseColor","_this6","_this7","connectOptions","interactivity","modes","connect","gradient","links"],"sources":["/Users/yutika/Documents/YutikaPortfolio/node_modules/tsparticles/cjs/Core/Canvas.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Canvas = void 0;\nconst CanvasUtils_1 = require(\"../Utils/CanvasUtils\");\nconst ColorUtils_1 = require(\"../Utils/ColorUtils\");\nconst Constants_1 = require(\"./Utils/Constants\");\nconst Utils_1 = require(\"../Utils/Utils\");\nclass Canvas {\n    constructor(container) {\n        this.container = container;\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this.context = null;\n        this.generatedCanvas = false;\n    }\n    init() {\n        this.resize();\n        this.initStyle();\n        this.initCover();\n        this.initTrail();\n        this.initBackground();\n        this.paint();\n    }\n    loadCanvas(canvas) {\n        var _a;\n        if (this.generatedCanvas) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        this.generatedCanvas =\n            canvas.dataset && Constants_1.Constants.generatedAttribute in canvas.dataset\n                ? canvas.dataset[Constants_1.Constants.generatedAttribute] === \"true\"\n                : this.generatedCanvas;\n        this.element = canvas;\n        this.originalStyle = (0, Utils_1.deepExtend)({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this.context = this.element.getContext(\"2d\");\n        this.container.retina.init();\n        this.initBackground();\n    }\n    destroy() {\n        var _a;\n        if (this.generatedCanvas) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        this.draw((ctx) => {\n            (0, CanvasUtils_1.clear)(ctx, this.size);\n        });\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw((ctx) => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                (0, CanvasUtils_1.clear)(ctx, this.size);\n                this.paintBase(this.coverColorStyle);\n            }\n            else {\n                this.paintBase();\n            }\n        });\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > 0 && this.trailFillColor) {\n            this.paintBase((0, ColorUtils_1.getStyleFromRgb)(this.trailFillColor, 1 / trail.length));\n        }\n        else {\n            this.draw((ctx) => {\n                (0, CanvasUtils_1.clear)(ctx, this.size);\n            });\n        }\n    }\n    async windowResize() {\n        if (!this.element) {\n            return;\n        }\n        this.resize();\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.resize !== undefined) {\n                plugin.resize();\n            }\n        }\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n    resize() {\n        if (!this.element) {\n            return;\n        }\n        const container = this.container, pxRatio = container.retina.pixelRatio, size = container.canvas.size, newSize = {\n            width: this.element.offsetWidth * pxRatio,\n            height: this.element.offsetHeight * pxRatio,\n        };\n        if (newSize.height === size.height &&\n            newSize.width === size.width &&\n            newSize.height === this.element.height &&\n            newSize.width === this.element.width) {\n            return;\n        }\n        const oldSize = Object.assign({}, size);\n        this.element.width = size.width = this.element.offsetWidth * pxRatio;\n        this.element.height = size.height = this.element.offsetHeight * pxRatio;\n        if (this.container.started) {\n            this.resizeFactor = {\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            };\n        }\n    }\n    drawConnectLine(p1, p2) {\n        this.draw((ctx) => {\n            var _a;\n            const lineStyle = this.lineStyle(p1, p2);\n            if (!lineStyle) {\n                return;\n            }\n            const pos1 = p1.getPosition(), pos2 = p2.getPosition();\n            (0, CanvasUtils_1.drawConnectLine)(ctx, (_a = p1.retina.linksWidth) !== null && _a !== void 0 ? _a : this.container.retina.linksWidth, lineStyle, pos1, pos2);\n        });\n    }\n    drawGrabLine(particle, lineColor, opacity, mousePos) {\n        const container = this.container;\n        this.draw((ctx) => {\n            var _a;\n            const beginPos = particle.getPosition();\n            (0, CanvasUtils_1.drawGrabLine)(ctx, (_a = particle.retina.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth, beginPos, mousePos, lineColor, opacity);\n        });\n    }\n    drawParticle(particle, delta) {\n        var _a, _b, _c, _d, _e, _f;\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius();\n        if (radius <= 0) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = (_a = particle.getStrokeColor()) !== null && _a !== void 0 ? _a : pfColor;\n        if (!pfColor && !psColor) {\n            return;\n        }\n        let [fColor, sColor] = this.getPluginParticleColors(particle);\n        if (!fColor || !sColor) {\n            if (!fColor) {\n                fColor = pfColor ? pfColor : undefined;\n            }\n            if (!sColor) {\n                sColor = psColor ? psColor : undefined;\n            }\n        }\n        const options = this.container.actualOptions, zIndexOptions = particle.options.zIndex, zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate, opacity = (_d = (_b = particle.bubble.opacity) !== null && _b !== void 0 ? _b : (_c = particle.opacity) === null || _c === void 0 ? void 0 : _c.value) !== null && _d !== void 0 ? _d : 1, strokeOpacity = (_f = (_e = particle.stroke) === null || _e === void 0 ? void 0 : _e.opacity) !== null && _f !== void 0 ? _f : opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor;\n        const colorStyles = {\n            fill: fColor ? (0, ColorUtils_1.getStyleFromHsl)(fColor, zOpacity) : undefined,\n        };\n        colorStyles.stroke = sColor ? (0, ColorUtils_1.getStyleFromHsl)(sColor, zStrokeOpacity) : colorStyles.fill;\n        this.draw((ctx) => {\n            const zSizeFactor = (1 - particle.zIndexFactor) ** zIndexOptions.sizeRate, container = this.container;\n            for (const updater of container.particles.updaters) {\n                if (updater.beforeDraw) {\n                    updater.beforeDraw(particle);\n                }\n                if (updater.getColorStyles) {\n                    const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                    if (fill) {\n                        colorStyles.fill = fill;\n                    }\n                    if (stroke) {\n                        colorStyles.stroke = stroke;\n                    }\n                }\n            }\n            (0, CanvasUtils_1.drawParticle)(container, ctx, particle, delta, colorStyles, options.backgroundMask.enable, options.backgroundMask.composite, radius * zSizeFactor, zOpacity, particle.options.shadow);\n            for (const updater of container.particles.updaters) {\n                if (updater.afterDraw) {\n                    updater.afterDraw(particle);\n                }\n            }\n        });\n    }\n    drawPlugin(plugin, delta) {\n        this.draw((ctx) => {\n            (0, CanvasUtils_1.drawPlugin)(ctx, plugin, delta);\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw((ctx) => {\n            (0, CanvasUtils_1.drawParticlePlugin)(ctx, plugin, particle, delta);\n        });\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element, elementStyle = element === null || element === void 0 ? void 0 : element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = (0, ColorUtils_1.colorToRgb)(background.color);\n            elementStyle.backgroundColor = color ? (0, ColorUtils_1.getStyleFromRgb)(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    draw(cb) {\n        if (!this.context) {\n            return;\n        }\n        return cb(this.context);\n    }\n    initCover() {\n        const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color, coverRgb = (0, ColorUtils_1.colorToRgb)(color);\n        if (coverRgb) {\n            const coverColor = {\n                r: coverRgb.r,\n                g: coverRgb.g,\n                b: coverRgb.b,\n                a: cover.opacity,\n            };\n            this.coverColorStyle = (0, ColorUtils_1.getStyleFromRgb)(coverColor, coverColor.a);\n        }\n    }\n    initTrail() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, fillColor = (0, ColorUtils_1.colorToRgb)(trail.fillColor);\n        if (fillColor) {\n            const trail = options.particles.move.trail;\n            this.trailFillColor = {\n                r: fillColor.r,\n                g: fillColor.g,\n                b: fillColor.b,\n                a: 1 / trail.length,\n            };\n        }\n    }\n    getPluginParticleColors(particle) {\n        let fColor, sColor;\n        for (const [, plugin] of this.container.plugins) {\n            if (!fColor && plugin.particleFillColor) {\n                fColor = (0, ColorUtils_1.colorToHsl)(plugin.particleFillColor(particle));\n            }\n            if (!sColor && plugin.particleStrokeColor) {\n                sColor = (0, ColorUtils_1.colorToHsl)(plugin.particleStrokeColor(particle));\n            }\n            if (fColor && sColor) {\n                break;\n            }\n        }\n        return [fColor, sColor];\n    }\n    initStyle() {\n        const element = this.element, options = this.container.actualOptions;\n        if (!element) {\n            return;\n        }\n        const originalStyle = this.originalStyle;\n        if (options.fullScreen.enable) {\n            this.originalStyle = (0, Utils_1.deepExtend)({}, element.style);\n            element.style.setProperty(\"position\", \"fixed\", \"important\");\n            element.style.setProperty(\"z-index\", options.fullScreen.zIndex.toString(10), \"important\");\n            element.style.setProperty(\"top\", \"0\", \"important\");\n            element.style.setProperty(\"left\", \"0\", \"important\");\n            element.style.setProperty(\"width\", \"100%\", \"important\");\n            element.style.setProperty(\"height\", \"100%\", \"important\");\n        }\n        else if (originalStyle) {\n            element.style.position = originalStyle.position;\n            element.style.zIndex = originalStyle.zIndex;\n            element.style.top = originalStyle.top;\n            element.style.left = originalStyle.left;\n            element.style.width = originalStyle.width;\n            element.style.height = originalStyle.height;\n        }\n        for (const key in options.style) {\n            if (!key || !options.style) {\n                continue;\n            }\n            const value = options.style[key];\n            if (!value) {\n                continue;\n            }\n            element.style.setProperty(key, value, \"important\");\n        }\n    }\n    paintBase(baseColor) {\n        this.draw((ctx) => {\n            (0, CanvasUtils_1.paintBase)(ctx, this.size, baseColor);\n        });\n    }\n    lineStyle(p1, p2) {\n        return this.draw((ctx) => {\n            const options = this.container.actualOptions, connectOptions = options.interactivity.modes.connect;\n            return (0, CanvasUtils_1.gradient)(ctx, p1, p2, connectOptions.links.opacity);\n        });\n    }\n}\nexports.Canvas = Canvas;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}